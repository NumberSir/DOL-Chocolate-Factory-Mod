:: Widgets variablesVersionUpdate [widget]
<<widget "variablesVersionUpdate">>
	/* * * * * * * * * * * * * * * * * *
	* OLD BACKWARDS COMPATIBILITY CODE
	* EDIT widget "backComp" FOR VERSIONS 0.3.4.8+
	*/

	<<if $objectVersion is undefined>>
		<<set $objectVersion to {}>>
	<</if>>
	<<if $saveVersions is undefined>>
		<<set $saveVersions to [StartConfig.version]>>
	<<elseif $saveVersions.last() isnot StartConfig.version>>
		<<set $saveVersions.push(StartConfig.version)>>
	<</if>>
	<<if $saveId is undefined>>
		<<set $saveId to random(10000, 99999)>>
	<</if>>
	<<if $saveName is undefined>>
		<<set $saveName to "">>
	<</if>>

	<<if $player is undefined>>
		<<set $player to {}>>
		<<set $player.sex to $playergender>>
		<<set $player.gender to $playergender>>

		<<set $player.gender_appearance to $playergenderappearance>>
		<<unset $playergenderappearance>>
	<</if>>

	<<if $player.appearance isnot undefined>>
		<<set $player.gender_appearance to $player.appearance>>
		<<run delete $player.appearance>>
	<</if>>

	<<if $toplessgender isnot undefined>>
		<<set $player.gender_appearance_without_overwear to $toplessgender>>
		<<unset $toplessgender>>
	<</if>>

	<<if $player.virginity is undefined>>
		<<set $player.virginity to {anal:true,oral:true,penile:true,vaginal:true,temple:false,handholding:true,kiss:true}>>
		<<if $analvirginity is 0>>
			<<set $player.virginity.anal to false>>
		<</if>>
		<<if $oralvirginity is 0>>
			<<set $player.virginity.oral to false>>
		<</if>>
		<<if $penilevirginity is 0>>
			<<set $player.virginity.penile to false>>
		<</if>>
		<<if $vaginalvirginity is 0>>
			<<set $player.virginity.vaginal to false>>
		<</if>>
	<</if>>
	<<if $player.virginity.handholding is undefined>>
		<<set $player.virginity.handholding to true>>
		<<set $player.virginity.kiss to true>>
	<</if>>
	<<if $analvirginity isnot undefined>>
		<<unset $analvirginity>>
		<<unset $oralvirginity>>
		<<unset $penilevirginity>>
		<<unset $vaginalvirginity>>
		<<unset $temple_virginity>>
	<</if>>

	<<if $player.penisExist is undefined and $penisexist isnot undefined>>
		<<set $player.penisExist to ($penisexist is 1 ? true : false)>>
		<<set $player.vaginaExist to ($vaginaexist is 1 ? true : false)>>
	<</if>>

	<<if $player.ballsExist is undefined>>
		<<set $player.ballsExist to ($player.gender isnot "f")>>
	<</if>>

	<<if $clothing_update is undefined>><<set $clothing_update to 1>>
		<<clothinginit>>
		<<givestartclothing>>
	<</if>>

	<<if $outfit_update is undefined or $outfit_update lt 3>><<set $outfit_update to 3>>
		<<for _i to 0; _i lt $outfit.length; _i++>>
			<<if $outfit[_i].colors is undefined>>
				<<set $outfit[_i].colors to false>>
			<</if>>
			<<if $outfit[_i].over_upper is undefined>>
				<<set $outfit[_i].over_upper to "naked">>
				<<set $outfit[_i].over_lower to "naked">>
				<<set $outfit[_i].over_head to "naked">>
			<</if>>
			<<if $outfit[_i].type[1]>>
				<<set $outfit[_i].type[0] to $outfit[_i].type[1]>>
				<<set $outfit[_i].type.deleteAt(1)>>
			<</if>>
		<</for>>
	<</if>>

	<<if $NPCName>>
		<<if $NPCName[21].nam is "Remy" and $NPCName[22].nam is "Alex">>/*0.2.20.0 fix for Black Wolf/Quinn/Niki only being partially implemented in rare cases.*/
			<<set $NPCNameList.delete("Black Wolf", "Quinn", "Niki", "Remy", "Alex")>>
			<<set $NPCName.deleteAt(21, 22)>>/*Resets Remy and Alex to ensure proper array order.*/
		<</if>>
	<</if>>

	<<if $npcNamedVersion gte 2>>
		<<updateNewNamedNpcs>>
	<</if>>

	/* <<clothing_data>> Keeps clothing data up to date with new and changed items */
	/* unnecessary because it is run in variables-static every time game is loaded */

	<<if $npcListVersion isnot 2>>
		<<npcList>>
	<</if>>
	<<npcNamedUpdate>> /*Updates old Named NPC code to new system*/

	<<if $availableMapsVersion isnot 3>>
		<<mapLocations>>
	<</if>>
	<<unset $avaliableMapsVersion>>

	<<if $parasite_update is undefined>><<set $parasite_update to 1>>
		<<parasiteinit>>
		<<if $penisparasite is 1>><<unset $penisparasite>>
			<<parasite penis urchin>>
			<<set $parasitestat -= 1>>
		<</if>>
		<<if $clitparasite is 1>><<unset $clitparasite>>
			<<parasite clit urchin>>
			<<set $parasitestat -= 1>>
		<</if>>
		<<if $chestparasite is 1>><<unset $chestparasite>>
			<<parasite nipples urchin>>
			<<set $parasitestat -= 1>>
		<</if>>
	<</if>>

	<<if $pubwhore is undefined>>
		<<set $pubwhore to 0>>
	<</if>>

	<<if $masturbationstat is undefined>>
		<<set $masturbationstat to 0>>
		<<set $masturbationorgasmstat to 0>>
		<<set $masturbationtimestat to 0>>
		<<set $masturbationorgasm to 0>>
	<</if>>

	<<if $blackchance is undefined>>
		<<set $blackchance to 10>>
	<</if>>

	<<if $angel is undefined>>
		<<set $angel to 0>>
		<<set $angelbuild to 0>>
	<</if>>

	<<if $angelBanish is undefined>>
		<<set $angelBanishMax to 0>>
		<<set $angelBanish to 0>>
		<<if $angel gte 4>>
			<<set $angelBanishMax to Math.floor($angelbuild / 10)>>
			<<set $angelBanish to $angelBanishMax>>
		<</if>>
	<</if>>

	<<if $demon is undefined>>
		<<set $demon to 0>>
	<</if>>
	<<if $demonbuild is undefined>>
		<<set $demonbuild to 0>>
	<</if>>
	<<if $demonabsorb is undefined>>
		<<set $demonabsorb to 0>>
	<</if>>

	<<if $upperwet is undefined>>
		<<set $upperwet to 0>>
		<<set $upperwetstage to 0>>
	<</if>>

	<<if $lowerwet is undefined>>
		<<set $lowerwet to 0>>
		<<set $lowerwetstage to 0>>
		<<set $underlowerwet to 0>>
		<<set $underlowerwetstage to 0>>
		<<set $underupperwet to 0>>
		<<set $underupperwetstage to 0>>
		<<set $overlowerwet to 0>>
		<<set $overlowerwetstage to 0>>
		<<set $overupperwet to 0>>
		<<set $overupperwetstage to 0>>
	<</if>>

	<<if $schoolevent is undefined>>
		<<set $schoolevent to 0>>
		<<set $schooleventtimer to 5>>
	<</if>>

	<<if $stressmax is undefined or $stressmax is 10010>>
		<<set $stressmax to 10000>>
	<</if>>
	<<if $tirednessmax is undefined>>
		<<set $tirednessmax to 2000>>
	<</if>>
	<<if $physiquemax is undefined>>
		<<set $physiquemax to 20000>>
	<</if>>
	<<if $beautymax is undefined>>
		<<set $beautymax to 10000>>
	<</if>>

	<<if $malechance is undefined>>
	<<set $malechance to 50>>
		<<if $genderdisable is "f">>
			<<set $malechance to 100>>
		<<elseif $genderdisable is "m">>
			<<set $malechance to 0>>
		<<elseif $genderdisable is 90>>
			<<set $malechance to 90>>
		<<elseif $genderdisable is 10>>
			<<set $malechance to 10>>
		<</if>>
	<</if>>

	<<if $transformdisable is undefined>>
		<<set $transformdisable to "f">>
	<</if>>

	<<if $robindebtlimit is undefined and $docksrobinintro is 1>>
		<<set $robindebtlimit to 5>>
		<<if $robindebt gte $robindebtlimit>>
			<<set $robindebt to ($robindebtlimit - 1)>>
		<</if>>
	<</if>>

	<<if $robinrescued isnot undefined>>
		<<set $robindebtknown to 1>>
	<</if>>

	<<if $averygender isnot undefined>>
		<<for _npc range ["avery", "morgan", "kylar", "blackwolf"]>>
			<<run delete V[_npc + "gender"]>>
			<<run delete V[_npc + "genitals"]>>
		<</for>>
	<</if>>

	<<if $blackwolfmonster is undefined>>
		<<rng>>
		<<if $monsterchance gte $rng>>
			<<set $blackwolfmonster to 1>>
		<<else>>
			<<set $blackwolfmonster to 0>>
		<</if>>
	<</if>>

	<<if $genderknown is undefined>>
		<<set $genderknown to ["Robin", "Bailey"]>>
	<</if>>

	<<if $waterwash is undefined>>
		<<set $waterwash to 0>>
	<</if>>

	<<if $NPCName[$NPCNameList.indexOf("Whitney")].state is undefined and $NPCName[$NPCNameList.indexOf("Whitney")].init is 1>>
		<<set $NPCName[$NPCNameList.indexOf("Whitney")].state to "active">>
		<<set $NPCName[$NPCNameList.indexOf("Whitney")].dom to 10>>
	<</if>>

	<<if $bullytimeroutside is undefined>>
		<<set $bullytimeroutside to 0>>
	<</if>>
	<<if $bullyeventoutside is undefined>>
		<<set $bullyeventoutside to 0>>
	<</if>>

	<<if $whitneylust is undefined>>
		<<set $whitneylust to 0>>
	<</if>>

	<<if $upperoutfitcasual is undefined>>
		<<if $player.gender is "m">>
			<<set $upperoutfitcasual to "t-shirt">>
			<<set $loweroutfitcasual to "shorts">>
			<<set $underoutfitcasual to "Y fronts">>
			<<set $upperoutfitschool to "school shirt">>
			<<set $loweroutfitschool to "school shorts">>
			<<set $underoutfitschool to "Y fronts">>
		<<else>>
			<<set $upperoutfitcasual to "sundress">>
			<<set $loweroutfitcasual to "sundress skirt">>
			<<set $underoutfitcasual to "plain panties">>
			<<set $upperoutfitschool to "school shirt">>
			<<set $loweroutfitschool to "school skirt">>
			<<set $underoutfitschool to "plain panties">>
		<</if>>
	<</if>>

	<<if $famesex is undefined>>
		<<set $famesex to 0>>
	<</if>>
	<<if $famerape is undefined>>
		<<set $famerape to 0>>
	<</if>>
	<<if $pillsconsumed is undefined>>
		<<set $pillsconsumed to 0>>
	<</if>>
	<<if $famegood is undefined>>
		<<set $famegood to 0>>
	<</if>>
	<<if $famebusiness is undefined>>
		<<set $famebusiness to 0>>
	<</if>>

	<<if $arousalmax is undefined>>
		<<set $arousalmax to 10000>>
	<</if>>

	<<if $deviancy is undefined>>
		<<set $deviancy to 0>>
	<</if>>

	<<if $squidcount is undefined>>
		<<set $squidcount to 0>>
	<</if>>

	<<if $schoolevent is -1>>
		<<set $schoolevent to 1>>
	<</if>>

	<<if $baileydefeated is undefined>>
		<<set $baileydefeated to 0>>
		<<set $baileydefeatedlewd to 0>>
		<<set $baileydefeatedchain to 0>>
	<</if>>

	<<if $soldCount is undefined>>
		<<if $rentsale isnot undefined>>
			<<set $soldCount to $rentsale>>
		<<else>>
			<<set $soldCount to 0>>
		<</if>>
	<</if>>

	<<if $robinmoney is undefined>>
		<<set $robinmoney to 300>>
	<</if>>

	<<if $robinPayout is undefined>>
		<<set $robinPayout to 0>>
	<</if>>

	<<if $scienceproject is undefined>>
		<<set $scienceproject to "none">>
	<</if>>

	<<if $yeardays is undefined>>
		<<set $yeardays to 0>>
	<</if>>

	<<if $mathsproject is undefined>>
		<<set $mathsproject to "none">>
	<</if>>

	<<if $gamemode is undefined>>
		<<set $gamemode to "normal">>
	<</if>>

	<<if $alluremod is undefined>>
		<<set $alluremod to 1>>
	<</if>>

	<<if $oxygenmax is undefined>>
		<<set $oxygenmax to 1200>>
		<<set $oxygen to 1200>>
	<</if>>

	<<if $suffocating is undefined>>
		<<set $suffocating to 0>>
	<</if>>

	<<if $asphyxiaLvl is undefined>>
		<<set $asphyxiaLvl to 3>>
	<</if>>

	<<if $chokeorgasm is undefined>>
		<<set $chokeorgasm to 0>>
	<</if>>

	<<if $NudeGenderDC is undefined or $NudeGenderDC gt 2>>
		<<set $NudeGenderDC to 2>>
	<</if>>

	<<if $hallucinogen is undefined>>
		<<set $hallucinogen to 0>>
	<</if>>

	<<if $antiquemoney is undefined>>
		<<set $antiquemoney to 0>>
		<<set $antiquemoneyhistory to 0>>
		<<if $scienceproject is "done" or $scienceproject is "won">>
			<<set $scienceproject to "none">>
		<</if>>
	<</if>>

	<<if $controlmax is undefined>>
		<<set $controlmax to 1000>>
		<<if $control is 1>>
			<<set $control to 1000>>
		<<else>>
			<<set $control to 0>>
		<</if>>
	<</if>>

	<<if $background is undefined>>
		<<set $background to "waif">>
	<</if>>

	<<if $orgasmtrait is undefined>>
		<<set $orgasmtrait to 0>>
	<</if>>
	<<if $ejactrait is undefined>>
		<<set $ejactrait to 0>>
	<</if>>
	<<if $molesttrait is undefined>>
		<<set $molesttrait to 0>>
	<</if>>
	<<if $rapetrait is undefined>>
		<<set $rapetrait to 0>>
	<</if>>
	<<if $bestialitytrait is undefined>>
		<<set $bestialitytrait to 0>>
	<</if>>
	<<if $tentacletrait is undefined>>
		<<set $tentacletrait to 0>>
	<</if>>
	<<if $voretrait is undefined>>
		<<set $voretrait to 0>>
	<</if>>
	<<if $milkdranktrait is undefined>>
		<<set $milkdranktrait to 0>>
	<</if>>

	<<if $alluretest is undefined>>
		<<set $alluretest to 0>>
	<</if>>

	<<if $whitneypantiescheck is undefined>>
		<<set $whitneypantiescheck to 0>>
	<</if>>

	<<if $assertiveaction is 0 or $assertiveaction is undefined>>
		<<set $assertiveaction to "trauma">>
	<</if>>

	<<if $famepark is undefined>>
		<<set $famepark to 0>>
	<</if>>

	<<if $beastmalechance is undefined>>
		<<set $beastmalechance to 80>>
	<</if>>

	<<if StartConfig.enableImages is false>>
		<<set $images to 0>>
	<</if>>

	<<if $beastgenderoverride is undefined>>
	<<set $beastgenderoverride to 0>>
	<</if>>

	<<if $speechcycle is undefined>>
	<<set $speechcycle to 0>>
	<</if>>

	<<if $npcspeechcycle is undefined>>
	<<set $npcspeechcycle to 0>>
	<</if>>

	<<if $breastfeedingdisable is undefined>>
	<<set $breastfeedingdisable to "f">>
	<</if>>

	<<if $real_gender isnot undefined>>
	<<set $player.gender to $real_gender>>
	<<unset $real_gender>>
	<</if>>

	<<if $physiquesize is undefined>>
	<<set $physiquesize to (1000 * $devlevel)>>
		<<if $physique gte 1>>
		<<else>>
		<<set $physique to $physiquemax>>
		<</if>>
	<</if>>

	<<if $fringelength is undefined>>
	<<set $fringelength to 200>>
	<<set $hairtype to "default">>
	<<set $fringetype to "default">>
	<</if>>

	<<if $famescrap is undefined>>
	<<set $famescrap to 0>>
	<</if>>

	<<if $famepimp is undefined>>
	<<set $famepimp to 0>>
	<</if>>

	<<if $spray is undefined>>
		<<set $spray to 1>>
	<</if>>

	<<if $spraymax is undefined>>
		<<set $spraymax to 1>>
	<</if>>

	<<if $spraystat is undefined>>
		<<set $spraystat to 0>>
	<</if>>

	<<if $silhouettedisable is undefined>>
		<<set $silhouettedisable to "f">>
	<</if>>

	<<if $watersportsdisable is undefined>>
		<<set $watersportsdisable to "f">>
	<</if>>

	<<if $averyrage isnot undefined>>
		<<unset $averyrage>>
	<</if>>

	<<if ($NPCName[$NPCNameList.indexOf("Avery")].state is undefined or $NPCName[$NPCNameList.indexOf("Avery")].state is "") and $NPCName[$NPCNameList.indexOf("Avery")].init is 1>>
		<<npcset Avery state "active">>
	<</if>>

	<<if ($NPCName[$NPCNameList.indexOf("Robin")].state is undefined or $NPCName[$NPCNameList.indexOf("Robin")].state is "") and $NPCName[$NPCNameList.indexOf("Robin")].init is 1>>
		<<npcset Robin state "active">>
	<</if>>

	<<if $catbuild is undefined>>
		<<set $catbuild to 0>>
		<<set $cat to 0>>
	<</if>>

	<<if $pain is undefined>>
		<<set $pain to 0>>
	<</if>>

	<<if $hairupdate isnot 1>>
		<<set $hairupdate to 1>>
		<<if $hairlength gte 900>>
			<<set $hairlengthstage to "feet">>
		<<elseif $hairlength gte 700>>
			<<set $hairlengthstage to "thighs">>
		<<elseif $hairlength gte 600>>
			<<set $hairlengthstage to "navel">>
		<<elseif $hairlength gte 400>>
			<<set $hairlengthstage to "chest">>
		<<elseif $hairlength gte 200>>
			<<set $hairlengthstage to "shoulder">>
		<<else>>
			<<set $hairlengthstage to "short">>
		<</if>>
		<<if $fringelength gte 900>>
			<<set $fringelengthstage to "feet">>
		<<elseif $fringelength gte 700>>
			<<set $fringelengthstage to "thighs">>
		<<elseif $fringelength gte 600>>
			<<set $fringelengthstage to "navel">>
		<<elseif $fringelength gte 400>>
			<<set $fringelengthstage to "chest">>
		<<elseif $fringelength gte 200>>
			<<set $fringelengthstage to "shoulder">>
		<<else>>
			<<set $fringelengthstage to "short">>
		<</if>>
	<</if>>

	<<if $dockhours is undefined>>
		<<set $dockhours to 0>>
	<</if>>

	<<if $infinitespray is undefined>>
		<<set $infinitespray to 0>>
	<</if>>

	<<if $hairtype is "braided ponytail">>
		<<set $hairtype to "ponytail">>
	<</if>>

	<<if $monsterhallucinations is undefined>>
		<<set $monsterhallucinations to "t">>
		<<set $monsterchance to 50>>
	<</if>>

	<<if $policemolestation is undefined>>
		<<set $policemolestation to 0>>
	<</if>>

	<<if $player.penissize is undefined>>
		<<set $player.penissize to 2>>
		<<set $penissizemax to 4>>
		<<set $penisgrowthtimer to 700>>
	<</if>>

	<<if $penissizemin is undefined>>
		<<set $penissizemin to -2>>
	<</if>>

	<<if $insecurity_penis_tiny is undefined>>
		<<set $insecurity_penis_tiny to 0>>
		<<set $insecurity_penis_small to 0>>
		<<set $insecurity_penis_big to 0>>
		<<set $insecurity_breasts_tiny to 0>>
		<<set $insecurity_breasts_small to 0>>
		<<set $insecurity_breasts_big to 0>>
		<<set $acceptance_penis_tiny to 0>>
		<<set $acceptance_penis_small to 0>>
		<<set $acceptance_penis_big to 0>>
		<<set $acceptance_breasts_tiny to 0>>
		<<set $acceptance_breasts_small to 0>>
		<<set $acceptance_breasts_big to 0>>
	<</if>>

	<<if $willpower is undefined>>
		<<set $willpower to 200>>
		<<set $willpowermax to 1000>>
	<</if>>

	<<if $fringetype is "swept back">>
		<<set $fringetype to "swept right">>
	<</if>>

	<<if $museuminterest is undefined>>
		<<set $museuminterest to 0>>
	<</if>>

	<<if $position is undefined>>
		<<set $position to 0>>
	<</if>>

	<<if $wear_upper is undefined>>
		<<set $wear_upper to "none">>
		<<set $wear_lower to "none">>
		<<set $wear_under_upper to "none">>
		<<set $wear_under_lower to "none">>
		<<set $wear_head to "none">>
		<<set $wear_face to "none">>
		<<set $wear_neck to "none">>
		<<set $wear_legs to "none">>
		<<set $wear_feet to "none">>
		<<set $wear_genitals to "none">>
		<<set $wear_outfit to "none">>
	<</if>>

	<<if $wear_over_upper is undefined>>
		<<set $wear_over_upper to "none">>
		<<set $wear_over_lower to "none">>
		<<set $wear_over_head to "none">>
	<</if>>

	<<if $no_underwear is undefined>>
		<<set $no_underwear to 0>>
	<</if>>

	<<if $arousal is undefined>>
		<<set $arousal to 0>>
	<</if>>

	<<if $breastsensitivity is undefined>>
		<<set $breastsensitivity to 1>>
	<</if>>
	<<if $genitalsensitivity is undefined>>
		<<set $genitalsensitivity to 1>>
	<</if>>

	<<if $hairtype is "swept right">>
		<<set $hairtype to "swept left">>
	<</if>>

	<<if $headnodetention is 1 or $headmoney is 1 or $headphotoshoot is 1>>
		<<set $headblackmailed to 1>>
	<</if>>

	<<physicalAdjustmentsInit>>

	<<if $tryOn is undefined>>
		<<tryOnInit>>
	<</if>>


	<<if $carryblock is undefined>>
		<<set $carryblock to 0>>
	<</if>>

	<<if $milk_drank_stat is undefined>>
		<<set $milk_drank_stat to 0>>
		<<set $milkdranktrait to 0>>
		<<set $breast_mod to 0>>
	<</if>>

	<<if $ballssize is undefined>>
		<<set $ballssize to $player.penissize>>
		<<set $ballssizemax to $penissizemax>>
		<<set $ballssizemin to $penissizemin>>
		<<set $ballsgrowthtimer to $penisgrowthtimer>>
	<</if>>

	<<if $player.bottomsize is undefined>>
		<<set $player.bottomsize to 2>>
		<<set $bottomsizemax to 8>>
		<<set $bottomsizemin to 0>>
		<<set $bottomsizeold to 0>>
		<<set $bottomgrowthtimer to 350>>
	<</if>>

	<<if $workouts is undefined>>
		<<set $workouts to 0>>
	<</if>>

	<<if $sewingKit is undefined>>
		<<set $sewingKit to 0>>
	<</if>>

	<<if $penis_mod is undefined>>
		<<set $penis_mod to 0>>
	<</if>>

	<<if $tanned is undefined>>
		<<set $tanned to 0>>
	<</if>>

	<<if $avery_penis_size isnot undefined>>
		<<for _npc range ["avery", "bailey", "charlie", "darryl", "doren", "eden", "gwylan", "harper", "jordan", "kylar", "landry", "leighton", "mason", "morgan", "river", "robin", "sam", "sirris", "whitney", "winter", "zephyr"]>>
			<<run delete V[_npc + "_penis_size"]>>
		<</for>>
	<</if>>

	<<if $breast_mod lt -12>>
		<<set $breast_mod to -12>>
	<</if>>
	<<if $breast_mod gt 12>>
		<<set $breast_mod to 12>>
	<</if>>

	<<if $shopDefaults is undefined>>
		<<set $shopDefaults to {
			"color":"black",
			"colorSet":null,
			"secColor":"black",
			"secColorSet":null,
			"disableReturn": false
		}>>
	<</if>>
	<<if $shopDefaults.alwaysBackToShopButton is undefined>>
		<<set $shopDefaults.alwaysBackToShopButton to false>>
	<</if>>
	<<if $shopDefaults.colourItems is undefined>>
		<<set $shopDefaults.colourItems = "random">>
	<</if>>
	<<if $shopDefaults.mannequinGender is undefined>>
		<<set $shopDefaults.mannequinGender = "same">>
	<</if>>
	<<if $shopDefaults.noHelp is undefined>>
		<<set $shopDefaults.compactMode to false>>
		<<set $shopDefaults.mannequinGenderFromClothes to false>>
		<<set $shopDefaults.highContrast to false>>
		<<set $shopDefaults.noTraits to false>>
		<<set $shopDefaults.noHelp to false>>
	<</if>>

	<<if $tentacles is undefined>>
		<<set $tentacles to {
			0: null,
			1: null,
			2: null,
			3: null,
			4: null,
			5: null,
			6: null,
			7: null,
			8: null,
			9: null,
			10: null,
			11: null,
			12: null,
			13: null,
			14: null,
			15: null,
			16: null,
			17: null,
			18: null,
			19: null,
			20: null,
			"active": 0,
			"max": 0
		}>>
	<</if>>

	<<if $npclovehigh isnot 10>>
		<<set $npclovehigh to 10>>
	<</if>>
	<<if $npclovelow isnot -10>>
		<<set $npclovelow to -10>>
	<</if>>
	<<if $npcdomhigh isnot 10>>
		<<set $npcdomhigh to 10>>
	<</if>>
	<<if $npcdomlow isnot -10>>
		<<set $npcdomlow to -10>>
	<</if>>

	<<if $scienceproject is "ongoing" and $sciencephallus is undefined>>
		<<set $sciencephallusready to 0>>
		<<set $sciencephallus to 0>>
		<<set $sciencephalluspenis to 0>>
		<<set $sciencephallusclit to 0>>
	<</if>>

	<<if $fallenangel is 2>>
		<<set $angelbuild to 0>>
	<</if>>
	<<if $demon gte 6>>
		<<set $demonFeat to true>>
	<</if>>

	<<if $orphan_hope is undefined>>
		<<set $orphan_hope to 0>>
	<</if>>
	<<if $orphan_reb is undefined>>
		<<set $orphan_reb to 0>>
	<</if>>

	<<if $masochism is undefined>>
		<<set $masochism to 0>>
		<<set $masochism_level to 0>>
	<</if>>

	<<if $per_npc is undefined>>
		<<set $per_npc to {}>>
	<</if>>

	<<if $lessonmissedtext is undefined>>
		<<set $lessonmissedtext to 0>>
		<<set $lessonmissed to 0>>
	<</if>>

	<<if $home_event_timer is undefined>>
		<<set $home_event_timer to 0>>
		<<set $home_event_count to 0>>
	<</if>>

	<<if $gwylangender is undefined>>
		<<if $malechance lt random(1, 100)>>
			<<set $gwylangender to "f">>
		<<else>>
			<<set $gwylangender to "m">>
		<</if>>
	<</if>>
	<<if $gwylangenitals is undefined>>
		<<if $gwylangender is "m">>
			<<if random(0, 99) gte $cbchance>>
				<<set $gwylangenitals to "penis">>
			<<else>>
				<<set $gwylangenitals to "vagina">>
			<</if>>
		<<elseif $gwylangender is "f">>
			<<if random(0, 99) gte $dgchance>>
				<<set $gwylangenitals to "vagina">>
			<<else>>
				<<set $gwylangenitals to "penis">>
			<</if>>
		<</if>>
	<</if>>

	<<if $spiderdisable is undefined>>
		<<set $spiderdisable to "f">>
	<</if>>

	<<if $gloryholestat is undefined>>
		<<set $gloryholestat to 0>>
	<</if>>

	<<if $brothel_basement_price is undefined>>
		<<set $brothel_basement_price to 1000>>
	<</if>>

	<<if $brothelshowdata is undefined>>
		<<set $brothelshowdata to { counts:{ agreed:0, done:0 }, type:"none", intro:0, done:false, missed:false }>>
		<<if $brothelshow isnot undefined>>
			<<set $brothelshowdata.type to $brothelshow>>
			<<unset $brothelshow>>
		<</if>>
		<<if $brothelshowintro isnot undefined>>
			<<set $brothelshowdata.intro to !!$brothelshowintro>>
			<<unset $brothelshowintro>>
		<</if>>
		<<if $brothelshowdone isnot undefined>>
			<<set $brothelshowdata.done to !!$brothelshowdone>>
			<<unset $brothelshowdone>>
		<</if>>
		<<if $brothelshowmissed isnot undefined>>
			<<set $brothelshowdata.missed to !!$brothelshowmissed>>
			<<unset $brothelshowmissed>>
		<</if>>
	<</if>>

	<<if $money is undefined>>
		<<set $money to 0>>
	<</if>>

	<<if $syndromeeden is 1 and $edenshrooms is undefined>>
		<<unset $syndromeeden>>
	<</if>>

	<<if $initnpcfix is undefined>>
		<<set $initnpcfix to 1>>/*Applies missing NPC settings for saves before 0.2.5*/
		<<initnpcgender>>
	<</if>>

	<<if $NPCName[$NPCNameList.indexOf("Kylar")].init is 1 and $NPCName[$NPCNameList.indexOf("Kylar")].state is "">>
		<<set $NPCName[$NPCNameList.indexOf("Kylar")].init to 0>>
	<</if>>

	<<if $chestuse is undefined>>
		<<set $cheststate to 0>>
	<</if>>

	<<if $lactating is undefined>>/*Updating to 0.2.7*/
		<<set $lactating to 0>>
		<<set $lactation_pressure to 0>>
		<<set $milk_amount to 30>>
		<<set $milk_volume to 30>>
		<<set $milk_max to 3000>>
		<<if $penisexist is 1>>
			<<set $semen_amount to 90>>
			<<set $semen_volume to 90>>
		<<else>>
			<<set $semen_amount to 0>>
			<<set $semen_volume to 0>>
		<</if>>
		<<set $semen_max to 3000>>
		<<set $milk_produced_stat to 0>>
		<<set $semen_produced_stat to 0>>
		<<set $masturbation_semen to 0>>
		<<set $masturbation_milk to 0>>
		<<set $bunstat to 0>>
		<<set $famesocial to 0>>
	<</if>>
	<<if $creamstat is undefined>>
		<<set $creamstat to 0>>
		<<set $lube_produced_stat to 0>>
	<</if>>

	<<if $chef_sus is undefined>>
		<<set $chef_sus to 0>>
	<</if>>

	<<if ndef $pillory_tenant>> /* Pillory related */
		<<setup_pillory>>
	<</if>>
	<<if ndef $police_intro>>							/* Police hack related*/
		<<set $police_intro to 0>>
		<<set $police_access_card to 0>>
		<<set $police_hack to 0>>
		<<set $pub_hack_job to 0>>
		<<set $hacker_tasks to []>>
	<</if>>
	<<if ndef $framed>>
		<<set $framed to 0>>
	<</if>>

	/* brothel */
	<<if ndef $brothel_raid>>
		<<set $brothel_raid to 0>>
	<</if>>
	<<if ndef $brothel_raid_day>>
		<<set $brothel_raid_day to 0>>
	<</if>>
	<<if ndef $brothel_thief>>
		<<set $brothel_thief to 0>>
	<</if>>

	<<if $o_long_and_beautiful is undefined>> /*'long hair' girl related*/
		<<set $o_long_and_beautiful to 0>>
		<<set $hy_sibling to 0>>
		<<set $hy_parent to 0>>
		<<set $long_hair_meet_day to 9999>>
		<<set $misbehaviour_day to 9999>>
	<</if>>


	<<if $objectVersion.skinColor is undefined>>
		<<skinColorInitOldSave>>
	<</if>>
	<<if $skinColor.tanningEnabled is "t">>
		<<set $skinColor.tanningEnabled to true>>
	<</if>>
	<<if $skinColor.tanningEnabled is "f">>
		<<set $skinColor.tanningEnabled to false>>
	<</if>>

	<<if $objectVersion.chastity lt 3 or $objectVersion.chastity is undefined>>
		<<if $worn.genitals is undefined>>
			<<set $worn.genitals to clone(setup.clothes.genitals[0])>>
			<<set $carried.genitals to clone(setup.clothes.genitals[0])>>
		<</if>>
		<<if $worn.under_lower.type.includes("chastity")>>
			<<set $worn.genitals to clone($worn.under_lower)>>
			<<set $worn.under_lower to clone(setup.clothes.under_lower[0])>>
		<</if>>
		<<if $worn.genitals.name isnot "naked">>
			<<set $worn.genitals.hideUnderLower to setup.clothes.genitals[1].hideUnderLower>>
			<<set $worn.genitals.type to setup.clothes.genitals[1].type>>
		<</if>>
		<<set $objectVersion.chastity to 3>>
	<</if>>

	<<if $showCaptionText is undefined>>
		<<set $showCaptionText to true>>
	<</if>>

	<<if $parasite.types is undefined>>
		<<set _oldparasite to $parasite>>
		<<parasiteinit>>
		<<for _part, _type range _oldparasite>>
			<<if _type.name isnot undefined>>
				<<set $parasite[_part].name to _type.name>>
				<<set $parasite[_type.name].push(_part.replace(/_/g, " "))>>
			<</if>>
		<</for>>
	<</if>>

	<<if $slimeSleepEvent is undefined>>
		<<set $slimeSleepEvent to 0>>
	<</if>>

	<<if $parasite.left_thigh.name is undefined>>
		<<removeparasite left_thigh>>
	<</if>>

	<<if $parasite.right_thigh.name is undefined>>
		<<removeparasite right_thigh>>
	<</if>>

	<<if $parasite.left_arm.name is undefined>>
		<<removeparasite left_arm>>
	<</if>>

	<<if $parasite.right_arm.name is undefined>>
		<<removeparasite right_arm>>
	<</if>>

	<<if $objectVersion.feats lt 1 or $objectVersion.feats is undefined>>
		<<set $feats to {
			"locked":false,
			"soft":false,
			"allSaves":{},
			"currentSave":{},
			"filter":"All"
		}>>
		<<set $objectVersion.feats to 1>>
	<</if>>

	<<if ($cheatdisable is "f" and !$debug) or $locked is true>>
		<<run delete $locked>>
		<<set $feats.locked to true>>
	<</if>>

	<<if $smuggler_location is undefined>>
		<<set $smuggler_location to "sewer">>
		<<set $smuggler_timer to 0>>
		<<set $smuggler_stolen_stat to 0>>
	<</if>>

	<<if $gamemode is "soft" or $alluremod lt 1>>
		<<set $feats.soft to true>>
	<</if>>

	<<updateFeats>>

	<<if $straponchance is undefined>>
		<<set $straponchance to 0>>
	<</if>>

	<<if $lastWardrobeSlot is undefined>>
		<<set $lastWardrobeSlot to "head">>
		<<set $newWardrobeStyle to true>>
	<</if>>

	<<if $objectVersion.customColors lt 4 or $objectVersion.customColors is undefined>>
		<<if $customColors is undefined>>
			<<set $customColors to {
				presets:{},
				action: "set",
				currentType: "primary",
				color:{primary:0, secondary:0},
				saturation:{primary:1, secondary:1},
				brightness:{primary:1, secondary:1},
				value:{primary:100, secondary:100}
			}>>
		<</if>>
		<<if $customColors.contrast is undefined>>
			<<set $customColors.contrast to{primary:1, secondary:1}>>
		<</if>>
		<<if $customColors.sepia is undefined>>
			<<set $customColors.sepia to{primary:0, secondary:0}>>
		<</if>>
		<<set $objectVersion.customColors to 4>>
	<</if>>

	<<if $objectVersion.customColors lt 5 or $objectVersion.customColors is undefined>>
		<<if $customColors.value is undefined>>
			<<set $customColors.value to {primary:100, secondary:100}>>
		<</if>>
		<<set $objectVersion.customColors to 5>>
	<</if>>

	<<if $swarm is undefined or $swarm.type is undefined>>
		<<set $swarm to {
			"type":0,
			"name":0,
			"move":0,
			"spill":0,
			"steady":0,
			"amount":{},
			"data":{}
		}>>
	<</if>>

	<<if $bodypart_number is undefined>>
		<<bodywriting_init>>
	<</if>>

	<<if $newlyWritten is undefined and $combat is 1>>
		<<set $newlyWritten to []>>
	<</if>>

	<<wetness_init>>

	<<if $player.gender_appearance_factors is undefined>>
		<<set $player.gender_appearance_factors to []>>
	<</if>>

	<<if $player.gender_appearance_without_overwear_factors is undefined>>
		<<set $player.gender_appearance_without_overwear_factors to []>>
	<</if>>

	<<if $player.gender_posture is undefined>>
		<<if $background is "crossdresser">>
			<<if $player.gender is "f">>
				<<set $player.gender_posture to "m">>
			<<elseif $player.gender is "m">>
				<<set $player.gender_posture to "f">>
			<</if>>
		<<else>>
			<<set $player.gender_posture to "n">>
		<</if>>
	<</if>>

	<<if $player.femininity is undefined>>
		<<set $player.femininity to 0>>
	<</if>>

	<<if $player.femininity_without_overwear is undefined>>
		<<set $player.femininity_without_overwear to 0>>
	<</if>>

	<<if $player.condom is undefined>>
		<<set $player.condom to false>>
		<<set $condomchance to 50>>
		<<set $condomautochance to 50>>
	<</if>>

	<<unset $clothes>>

	<<if $cat gte 1 or $wolfgirl gte 1 or $cow gte 1 or $harpy gte 1>>
		<<set $physicalTransform to 1>>
	<<else>>
		<<set $physicalTransform to 0>>
	<</if>>

	<<if $demon gte 1 or $angel gte 1 or $fallenangel gte 2>>
		<<set $specialTransform to 1>>
	<<else>>
		<<set $specialTransform to 0>>
	<</if>>
	<<unset $transformed>>

	<<if $backgroundTraits is undefined>>
		<<set $backgroundTraits to [$background]>>
	<</if>>

	<<if Array.isArray($rebuy_success) is false>>
		<<set $rebuy_failure to []>>
		<<set $rebuy_success to []>>
	<</if>>

	<<if $dissociation is undefined>>
		<<set $dissociation to 0>>
	<</if>>

	<<if $worn.over_upper is undefined>>
		<<set $worn.over_upper to clone(setup.clothes.over_upper[0])>>
		<<set $worn.over_lower to clone(setup.clothes.over_lower[0])>>
		<<set $worn.over_head to clone(setup.clothes.over_head[0])>>

		<<set $carried.over_upper to clone(setup.clothes.over_upper[0])>>
		<<set $carried.over_lower to clone(setup.clothes.over_lower[0])>>
		<<set $carried.over_head to clone(setup.clothes.over_head[0])>>

		<<set $wardrobe.over_upper to []>>
		<<set $wardrobe.over_lower to []>>
		<<set $wardrobe.over_head to []>>

		<<set $store.over_upper to []>>
		<<set $store.over_lower to []>>
		<<set $store.over_head to []>>
	<</if>>

	<<if $wardrobe.over_head is undefined>>
		<<set $wardrobe.over_head to []>>
	<</if>>

	<<if $worn.hands is undefined>>
		<<set $worn.hands to clone(setup.clothes.hands[0])>>
		<<set $carried.hands to clone(setup.clothes.hands[0])>>
		<<set $wardrobe.hands to []>>
		<<set $store.hands to []>>
		<<set $wear_hands to "none">>
	<</if>>

	<!-- updateClothes was moved to <<backcomp>> at the bottom of this file -->

	<<if $objectVersion.wardrobes lt 4 or $objectVersion.wardrobes is undefined>>
		<<wardrobesUpdate>>
		<<set $objectVersion.wardrobes to 4>>
	<</if>>

	<<if $mathsprojectwon is 1>>
		<<earnFeat "Maths Competition Winner">>
	<</if>>
	<<if $scienceprojectwon is 1>>
		<<earnFeat "Science Fair Winner">>
	<</if>>

	<<if $bodywritingdisable is undefined>>
		<<set $bodywritingdisable to "f">>
	<</if>>

	<<if $arousal is NaN or $arousal is undefined>>
		<<set $arousal to 0>>
	<</if>>
	<<if $pain is NaN or $pain is undefined>>
		<<set $pain to 0>>
	<</if>>

	<<if !$skin.forehead>>
		<<bodywriting_clear forehead>>
	<</if>>
	<<if !$skin.left_cheek>>
		<<bodywriting_clear left_cheek>>
	<</if>>
	<<if !$skin.right_cheek>>
		<<bodywriting_clear right_cheek>>
	<</if>>
	<<if !$skin.left_shoulder>>
		<<bodywriting_clear left_shoulder>>
	<</if>>
	<<if !$skin.right_shoulder>>
		<<bodywriting_clear right_shoulder>>
	<</if>>
	<<if !$skin.breasts>>
		<<bodywriting_clear breasts>>
	<</if>>
	<<if !$skin.back>>
		<<bodywriting_clear back>>
	<</if>>
	<<if !$skin.pubic>>
		<<bodywriting_clear pubic>>
	<</if>>
	<<if !$skin.left_thigh>>
		<<bodywriting_clear left_thigh>>
	<</if>>
	<<if !$skin.right_thigh>>
		<<bodywriting_clear right_thigh>>
	<</if>>
	<<if !$skin.left_bottom>>
		<<bodywriting_clear left_bottom>>
	<</if>>
	<<if !$skin.right_bottom>>
		<<bodywriting_clear right_bottom>>
	<</if>>

	<<if $crime is null or $crime is undefined>>
		<<set $crime to 0>>
		<<set $crimehistory to 0>>
		<<set $blackmoney to 0>>
	<</if>>

	<<if isNaN(parseInt($crime))>>
		<<set $crime to 0>>
	<</if>>

	<<if isNaN(parseInt($crimehistory))>>
		<<set $crimehistory to 0>>
	<</if>>

	<<if isNaN(parseInt($blackmoney))>>
		<<set $blackmoney to 0>>
	<</if>>

	<<if $worn.upper is undefined>>
		<<set $worn.upper to clone(setup.clothes.upper[0])>>
	<</if>>
	<<if $worn.lower is undefined>>
		<<set $worn.lower to clone(setup.clothes.lower[0])>>
	<</if>>
	<<if $worn.under_upper is undefined>>
		<<set $worn.under_upper to clone(setup.clothes.under_upper[0])>>
	<</if>>
	<<if $worn.under_lower is undefined>>
		<<set $worn.under_lower to clone(setup.clothes.under_lower[0])>>
	<</if>>
	<<if $worn.head is undefined>>
		<<set $worn.head to clone(setup.clothes.head[0])>>
	<</if>>
	<<if $worn.face is undefined>>
		<<set $worn.face to clone(setup.clothes.face[0])>>
	<</if>>
	<<if $worn.neck is undefined>>
		<<set $worn.neck to clone(setup.clothes.neck[0])>>
	<</if>>
	<<if $worn.legs is undefined>>
		<<set $worn.legs to clone(setup.clothes.legs[0])>>
	<</if>>
	<<if $worn.feet is undefined>>
		<<set $worn.feet to clone(setup.clothes.feet[0])>>
	<</if>>

	<<if ndef $swimnudecounter>>
		<<set $swimnudecounter to 0>>
		<<set $swimall to 0>>
	<</if>> /*for swimming*/

	<<if $player.gender_body is undefined>>
		<<set $player.gender_body to clone($player.gender)>>
	<</if>>

	<<if $worn.genitals.exposed is undefined>>
		<<if $worn.genitals.exposed_base is 0>>
			<<set $worn.genitals.exposed to 0>>
		<<else>>
			<<set $worn.genitals.exposed to 1>>
		<</if>>
	<</if>>

	<<if $closinghour isnot 21>>
		<<set $closinghour to 21>>
	<</if>>

	<!-- specialClothesSetup was moved to <<backComp>> -->

	<<if $objectVersion.uncomfortable lt 2 or $objectVersion.uncomfortable is undefined>>
		<<if $uncomfortable is undefined>>
			<<if $lightexhibitionismaction isnot undefined>>
				<<set $uncomfortable to {
					underwear: ($lightexhibitionismaction is "embarrassed" ? true : false),
					nude: ($exhibitionismaction is "embarrassed" ? true : false),
				}>>
				<<unset $lightexhibitionismaction>>
				<<unset $exhibitionismaction>>
			<<else>>
				<<set $uncomfortable to {
					underwear: true,
					nude: true,
				}>>
			<</if>>
		<</if>>
		<<set $objectVersion.uncomfortable to 2>>
	<</if>>

	<<if $sidebarStats is undefined>>
		<<set $sidebarStats to "Disabled">>
	<</if>>

	<<if $openinghours is undefined>>
		<<if $hour gte 8 and $hour lt 21>>
			<<set $openinghours to 1>>
		<<else>>
			<<set $openinghours to 0>>
		<</if>>
	<</if>>

	<<if $athletics is undefined>>
		<<set $athletics to Math.trunc(($physique / $physiquesize) * 1000)>>
	<</if>>

	<<if $dontHide is undefined>>
		<<set $dontHide to false>>
	<</if>>

	<<if $checkstyle is undefined>>
		<<set $checkstyle to "words">>
		<<set $tending to 0>>
		<<set $garden_flowers_intro to 1>>
		<<set $eden_plot_intro to 1>>
		<<set $wolf_plot_intro to 1>>
		<<set $asylum_plot_intro to 1>>
		<<set $plots to {}>>
		<<set $plants_known to []>>
		<<set $plants to {}>>
		<<set $stall_rejected to 0>>
		<<set $produce_sold to 0>>
	<</if>>

	<<if $combatControls is undefined>>
		<<set $combatControls to "radio">>
	<</if>>


	<<if $loveInterest is undefined>>
		<<set $loveInterest to {
			primary: "None",
			secondary: "None",
			tertiary: "None"
		}>>
	<</if>>

	<<if $dateCount is undefined>>
		<<set $dateCount to {
			Total: 0,
			Robin: 0,
			Whitney: 0,
			Kylar: 0,
			Eden: 0,
			Avery: 0,
			BlackWolfHunts: 0
		}>>
	<</if>>

	<<if $dateCount.Alex is undefined>>
		<<set $dateCount.GreatHawkHunts to 0>>
		<<set $dateCount.Alex to 0>>
		<<set $dateCount.Sydney to 0>>
	<</if>>

	<<if $virginTaken is undefined>>
		<<set $virginTaken to {
			kiss: [],
			handholding: [],
			oral: [],
			anal: [],
			vaginal: [],
			penile: []
		}>>
	<</if>>

	<<setupDefaults>>

	<<if $bodywritingImages is undefined>>
		<<set $bodywritingImages to true>>
	<</if>>

	<<if !$physique and $physique isnot 0>>
		<<set $physique to ($physiquesize / 7) * 3>>
	<</if>>
	<<if !$tiredness and $tiredness isnot 0>>
		<<set $tiredness to 0>>
	<</if>>

	<!-- updateMuseumAntiques was moved to <<backComp>> -->

	<<if $objectVersion.specialClothesEffectsSetup lt 1 or $objectVersion.specialClothesEffectsSetup is undefined>>
		<<specialClothesEffectsSetup>>
		<<set $objectVersion.specialClothesEffectsSetup to 1>>
	<</if>>

	<<if $masturbationFix is undefined>>
		<<set $mouthactiondefault to 0>>
		<<set $mouthaction to 0>>
		<<set $mouth to 0>>
		<<set $masturbationFix to true>>
	<</if>>

	<<if $lastOptions is undefined>>
		<<resetLastOptions>>
	<</if>>

	<<set $_npcHairEyeNeedsGenerating to $NPCName.some(n => !(n.eyeColour || n.hairColour))>>
	<<if $_npcHairEyeNeedsGenerating>>
		<<generateNPCNameHairAndEyeColors>>
	<</if>>

	<<if $stat_shoot is undefined>>
		<<set $stat_shoot to 0>>
		<<set $cow to 0>>
		<<set $cowbuild to 0>>
		<<set $fluid_forced_stat to 0>>
	<</if>>

	<<if $shoot_stat>> /*Checking shoot_stat's existence to assist clean-up for 0.2.14.1 fix*/
		<<if $shoot_stat gt 0>>
			<<set $stat_shoot += $shoot_stat>>
		<</if>>
		<<unset $shoot_stat>>
	<</if>>

	<<set $BeastList to ["dog","cat","pig","wolf","dolphin","lizard","bear","boar","creature","horse","fox","hawk","spider"]>>

	<<if $niki_seen is undefined and $chef_state gte 5>>
		<<set $niki_seen to "chef">>
	<</if>>

	<<if $active_enemy is undefined>>
		<<set $active_enemy to 0>>
	<</if>>

	<<if $combatTrain is undefined>>
		<<set $combatTrain to {
			length: 0,
			generateInit: 1,
			beastTypes: [],
			numberPerTrain: []
		}>>
	<</if>>

	<<if isNaN(parseInt($trauma))>>
		<<set $trauma to 0>>
	<</if>>

	<<if $arousalError isnot undefined>>
		<<set $arousalError to [$arousalError.length]>>
	<</if>>

	<<if !$livestock_obey and $livestock_obey isnot 0>>
		<<set $livestock_obey to 50>>
	<</if>>

	<<setupTransformationPiecesObject>>

	<<if $clothingShop is undefined>>
		<<set $clothingShop to {
			ban: 0,
			banExtension: false,
			spotted: false,
			stolenClothes: 0,
			totalStolenClothes: 0,
			banCount: 0,
			rng: random(0,1000)
		}>>
	<</if>>

	<<if $adultShop is undefined>>
		<<set $adultShop to {
			ban: 0,
			banExtension: false,
			spotted: false,
			stolenClothes: 0,
			totalStolenClothes: 0,
			banCount: 0,
			rng: random(0,1000)
		}>>
	<</if>>

	<<if $penisWetness is undefined>>
		<<set $penisWetness to 0>>
	<</if>>

	<<if $pbdisable is undefined>>
		<<set $pbdisable to "t">>
	<</if>>

	<<if $facestyle is undefined>>
		<<set $facestyle to "default">>
	<</if>>

	<<if $blinkingdisable is undefined>>
		<<set $blinkingdisable to "f">>
	<</if>>

	<<if $makeup is undefined>>
		<<set $makeup = {}>>
		<<set $makeup.owned = {}>>
		<<set $makeup.owned.lipstick = []>>
		<<set $makeup.owned.eyeshadow = []>>
		<<set $makeup.owned.eyelenses = []>>
		<<set $makeup.owned.hairdye = []>>
		<<set $makeup.owned.mascara = []>>
		<<set $makeup.lipstick = 0>>
		<<set $makeup.eyeshadow = 0>>
		<<set $makeup.eyelenses = {"left":0, "right":0}>>
		<<set $makeup.mascara = 0>>
		<<set $makeup.mascara_running = 0>>
		<<set $makeup.pbcolour = 0>>
		<<set $makeup.browscolour = 0>>
		<<set $makeup.concealer = 0>>
	<</if>>

	<<if $makeup.owned.custom_eyelenses is undefined>>
		<<set $makeup.owned.custom_eyelenses to []>> /* pharmacy custom eye lenses */
	<</if>>

	<<if $uncomfortable.prostituting is undefined>>
		<<set $uncomfortable.prostituting to true>>
	<</if>>

	<<if $malevictimchance is undefined>>
		<<set $malevictimchance to $malechance>>
		<<set $homochance to 4>>
	<</if>>

	<<if $livestock_intro is 0>>
		<<if $remy_seen is undefined>>
			<<set $remy_seen to "livestock">>
			<<set $livestock_robin to 1>>
		<</if>>
		<<if $livestock_noise is undefined>>
			<<set $livestock_noise to false>>
		<</if>>
	<</if>>

	<<if $birdbuild is undefined>>
		<<set $birdbuild to 0>>
		<<set $harpy to 0>>
		<<set $home_gone to 0>>
	<</if>>

	<<if $hirsutedisable>>
		<<if $hirsutedisable is "f">>
			<<if $wolfgirl gte 4>>
				<<set $transformationParts.wolf.pubes to "default">>
				<<set $transformationParts.wolf.pits to "default">>
			<<else>>
				<<set $transformationParts.wolf.pubes to "disabled">>
				<<set $transformationParts.wolf.pits to "disabled">>
			<</if>>
			<<if $harpy gte 6>>
				<<set $transformationParts.bird.pubes to "default">>
			<<else>>
				<<set $transformationParts.bird.pubes to "disabled">>
			<</if>>
		<<else>>
			<<if $wolfgirl gte 4>>
				<<set $transformationParts.wolf.pubes to "hidden">>
				<<set $transformationParts.wolf.pits to "hidden">>
			<<else>>
				<<set $transformationParts.wolf.pubes to "disabled">>
				<<set $transformationParts.wolf.pits to "disabled">>
			<</if>>
			<<if $harpy gte 6>>
				<<set $transformationParts.bird.pubes to "hidden">>
			<<else>>
				<<set $transformationParts.bird.pubes to "disabled">>
			<</if>>
		<</if>>
	<<unset $hirsutedisable>>
	<</if>>
	<<hirsuteHideCheck>>

	<<if $per_npc.janitor isnot undefined>>
		<<clearNPC "janitor">>
	<</if>>

	<<if $prop is undefined>>
		<<set $prop to []>>
	<</if>>

	<<if $punishmentposition isnot 0 and $location isnot "brothel">>
		<<set $punishmentposition to 0>>
	<</if>>

	<<if $schoolrep is undefined>>
		<<set $schoolrep to {}>>
		<<set $schoolrep.crossdress to 0>>
		<<set $schoolrep.herm to 0>>
	<</if>>

	<<if $science_star is undefined>>
		<<set $science_star to 0>>
		<<set $maths_star to 0>>
		<<set $english_star to 0>>
		<<set $history_star to 0>>
	<</if>>

	<<if $farm_shift is undefined>>
		<<set $farm_shift to 0>>
		<<unset $beaststance>>
		<<set $cattle_milked to 0>>
	<</if>>

	<<if $fringetype is "swept right">>
		<<set $fringetype to "swept left">>
	<</if>>
	<<if $version === undefined>>
		<<set $version={}>>
	<</if>>
	<<if $version.schema === undefined>>
		<<set $version.schema = 1>>
	<</if>>

	<<if typeof $farm_yield_alex is "string">>
		<<set $farm_yield_alex to 0>>
	<</if>>
	<<if typeof $farm_yield is "string">>
		<<set $farm_yield to 0>>
	<</if>>

	<<if $farm is undefined>>
	<<elseif $farm.build_finished is "parasite 1">>
		<<set $farm.build_finished to ["parasites 1"]>>
	<<elseif $farm.build_finished is "parasite 2">>
		<<set $farm.build_finished to ["parasites 2"]>>
	<</if>>

	<<if $farm is undefined>>
	<<elseif $farm.build_finished is undefined or $farm.build_finished is 0>>
		<<set $farm.build_finished to []>>
	<<elseif Array.isArray($farm.build_finished)>>
	<<else>>
		<<set $farm.build_finished to [$farm.build_finished]>>
	<</if>>

	<<if typeof $money is "string">>
		<<set $money to 0>>
	<</if>>

	<<if $masseur_stat is undefined>>
		<<set $masseur_stat to 0>>
		<<set $machine_stat to 0>>
	<</if>>

	/* <<if $year % 4 is 0 and $yeardays gte 366 or $yeardays gte 365>>
		<<year>>
	<</if>> */

	<<if $mason_pond is 5 and $garden_flowers_intro is 1>>
		<<unset $garden_flowers_intro>>
		<<plots_init garden 3 earth 1 small>>
		<<add_plot garden water 1 small>>
	<<elseif $mason_pond is 5>>
		<<if !$plots.garden[3]>>
			<<add_plot garden water 1 small>>
		<</if>>
	<</if>>

	<<if $science_exam is undefined>>
		<<set $science_exam to (40 + ($weekday * 10))>>
		<<set $maths_exam to (40 + ($weekday * 10))>>
		<<set $english_exam to (40 + ($weekday * 10))>>
		<<set $history_exam to (40 + ($weekday * 10))>>
		<<if $science gte 700>>
			<<set $sciencetrait to 4>>
			<<set $science to 1000>>
		<<elseif $science gte 500>>
			<<set $sciencetrait to 3>>
			<<set $science to 700>>
		<<elseif $science gte 400>>
			<<set $sciencetrait to 2>>
			<<set $science to 400>>
		<<elseif $science gte 200>>
			<<set $sciencetrait to 1>>
			<<set $science to 200>>
		<<elseif $science gte 100>>
			<<set $sciencetrait to 0>>
			<<set $science to 100>>
		<<else>>
			<<set $sciencetrait to -1>>
			<<set $science to 0>>
		<</if>>
		<<if $maths gte 700>>
			<<set $mathstrait to 4>>
			<<set $maths to 1000>>
		<<elseif $maths gte 500>>
			<<set $mathstrait to 3>>
			<<set $maths to 700>>
		<<elseif $maths gte 400>>
			<<set $mathstrait to 2>>
			<<set $maths to 400>>
		<<elseif $maths gte 200>>
			<<set $mathstrait to 1>>
			<<set $maths to 200>>
		<<elseif $maths gte 100>>
			<<set $mathstrait to 0>>
			<<set $maths to 100>>
		<<else>>
			<<set $mathstrait to -1>>
			<<set $maths to 0>>
		<</if>>
		<<if $english gte 700>>
			<<set $englishtrait to 4>>
			<<set $english to 1000>>
		<<elseif $english gte 500>>
			<<set $englishtrait to 3>>
			<<set $english to 700>>
		<<elseif $english gte 400>>
			<<set $englishtrait to 2>>
			<<set $english to 400>>
		<<elseif $english gte 200>>
			<<set $englishtrait to 1>>
			<<set $english to 200>>
		<<elseif $english gte 100>>
			<<set $englishtrait to 0>>
			<<set $english to 100>>
		<<else>>
			<<set $englishtrait to -1>>
			<<set $english to 0>>
		<</if>>
		<<if $history gte 700>>
			<<set $historytrait to 4>>
			<<set $history to 1000>>
		<<elseif $history gte 500>>
			<<set $historytrait to 3>>
			<<set $history to 700>>
		<<elseif $history gte 400>>
			<<set $historytrait to 2>>
			<<set $history to 400>>
		<<elseif $history gte 200>>
			<<set $historytrait to 1>>
			<<set $history to 200>>
		<<elseif $history gte 100>>
			<<set $historytrait to 0>>
			<<set $history to 100>>
		<<else>>
			<<set $historytrait to -1>>
			<<set $history to 0>>
		<</if>>
		<<exam_difficulty>>
		<<set $distinction_stat to 0>>
		<<unset $arousalsaved>>
	<</if>>

	<<if isNaN(parseInt($tiredness))>>
		<<set $tiredness to 0>>
	<</if>>

	<<if ($minute % $time) isnot ($time - ($hour * 60))>>
		<<set $minute to ($time - ($hour * 60))>>
	<</if>>

	<<if $waspdisable is undefined>>
		<<set $waspdisable to "f">>
	<</if>>
	<<if $slugdisable is undefined>>
		<<set $slugdisable to "f">>
	<</if>>

	<<if $season is undefined>>
		<<if $month is "december" or $month is "january" or $month is "february">>
			<<set $season to "winter">>
		<<elseif $month is "march" or $month is "april" or $month is "may">>
			<<set $season to "spring">>
		<<elseif $month is "june" or $month is "july" or $month is "august">>
			<<set $season to "summer">>
		<<else>>
			<<set $season to "autumn">>
		<</if>>
	<</if>>

	/*
	<<if $weather is undefined or $weather.current is undefined>>
		<<set $weather to {
			current: either("clear", "clear", "clear", "clear", "overcast", "overcast", "overcast", "overcast", "rain", "rain"),
			sevendayforcast:[],
			chance: [],
			rainydays: [],
			rainstreak: false,
			weekdaylist: [],
			raindaystart: 0,
			lastrainmax: 0
		}>>
		<<weatherinit>>
	<</if>>
	*/


	<<if $clothing_number isnot 13>>
		<<set $clothing_number to 13>>
	<</if>>

	<<if $warmth is undefined>>
		<<set $warmth to 0>>
		<<set $chill_day to 0>>
		<<switch $season>>
		<<case "spring">>
			<<set $chill_day += 70>>
		<<case "summer">>

		<<case "autumn">>
			<<set $chill_day += 80>>
		<<case "winter">>
			<<set $chill_day += 150>>
		<</switch>>
		<<if $weather is "snow">>
			<<set $chill_day += 50>>
		<</if>>
		<<set $chill to $chill_day>>
	<</if>>

	<<farm_update>>

	<<if $prepareSaveDetails is undefined>>
		<<set $prepareSaveDetails to true>>
	<</if>>

	<<if $attitudesControl is undefined>>
		<<set $attitudesControl to {
		showGoldLink:false,
		unlockExhibitionismUnderwear:false,
		unlockExhibitionismNude:false,
		unlockTransformation:false,
		unlockDemonFlaunt:false,
		unlockProstitution:false,
		unlockLoveInterest1:false,
		unlockLoveInterest2:false,
		unlockLoveInterest3:false,
		unlockDefaultActions:false
		}>>
	<</if>>

	<<if $wild_plant_stat is undefined>>
		<<set $wild_plant_stat to 0>>
	<</if>>

	<<if $fertiliser is undefined>>
		<<set $fertiliser to {current:0,used:0}>>
	<</if>>
	<<if $saveName.includes("<")>>
		<<set $saveName to $saveName.replace(/[^a-zA-Z 0-9]+/g,"")>>
	<</if>>

	<<if $imgLighten is false>>
		<<set $imgLighten to "">>
	<<elseif $imgLighten is true>>
		<<set $imgLighten to "imgLighten">>
	<</if>>

	<<if $enemyArousalLossReduction is undefined>>
		<<set $enemyArousalLossReduction to 1>>
	<</if>>

	<<if $pubtask is 1>>
		<<set $pubtask to "forest">>
	<</if>>

	<<if $plants_known.includes("garlic bulb")>>
		<<set $plants_known.delete("garlic bulb")>>
		<<set $plants_known.push("garlic_bulb")>>
	<</if>>

	<<if $outbuildingvisited is 1 and $outbuildingBeast is undefined>>
		<<set $outbuildingBeast to "dog">>
	<</if>>

	<<if $o_long_and_beautiful gt 10>>
		<<set $o_long_and_beautiful to 10>>
	<<elseif !$hy_parent and !$hy_student and $o_long_and_beautiful is 10>>
		<<set $o_long_and_beautiful to 9>>
	<</if>>

	<<if $money is NaN or $money is undefined>>
		<<set $money to 0>>
	<</if>>

	<<if $mannequinHasPenis is undefined>>
		<<set $mannequinHasPenis to $player.penisExist>>
		<<set $mannequinBreastsSize to $mannequinHasPenis ? 0 : 3>>
	<</if>>
	<<if $shopPage is undefined>>
		<<set $shopPage = 0>>
	<</if>>
	<<if $shopClothingFilter is undefined>>
		<<shopClothingFilterReset>>
	<</if>>
	<<if $shopItemsPerPage is undefined>>
		<<set $shopItemsPerPage = 12>>
	<</if>>

	<<if $saveDetails is undefined>>
		<<set $saveDetails to {
			exported:{
				days: clone($days),
				frequency: 15,
				count: 0,
				dayCount: 0,
			},
			auto:{
				count: 0
			},
			slot:{
				count: 0,
				dayCount: 0,
			},
			playTime: 0,
			loadTime: new Date(),
			loadCount: 0,
			f: 3,
		}>>
		<<unset $lastExported>>
	<</if>>
	<<if $saveDetails.exported.dayCount is undefined>>
		<<set $saveDetails.exported.dayCount to 0>>
		<<set $saveDetails.slot.dayCount to 0>>
	<</if>>

	<<if $sleepStat is undefined>>
		<<set $sleepStat to 0>>
	<</if>>

	<<if $greathawkmonster is undefined>>
		<<rng>>
		<<if $monsterchance gte $rng>>
			<<set $greathawkmonster to 1>>
		<<else>>
			<<set $greathawkmonster to 0>>
		<</if>>
		<<set $bird to {}>>
	<</if>>

	<<if $harpy is undefined>>
		<<set $harpy to 0>>
	<</if>>

	<<if $NPCName[$NPCNameList.indexOf("Great Hawk")].type is "bird">>
		<<set $NPCName[$NPCNameList.indexOf("Great Hawk")].type to "hawk">>
	<</if>>

	<<if $clothesPrice is undefined>>
		<<set $clothesPrice to 1>>
	<</if>>
	<<if $clothesPriceUnderwear is undefined>>
		<<set $clothesPriceUnderwear to 1>>
		<<set $clothesPriceSchool to 1>>
		<<set $clothesPriceLewd to 1>>
	<</if>>


	<<childrenSetup>>
	<<npcPregnancyUpdater>>
	<<if $basePlayerPregnancyChance is undefined>>
		<<set $basePlayerPregnancyChance to 50>>
		<<set $humanPregnancyMonths to 3>>
		<<set $wolfPregnancyWeeks to 4>>
		<<set $playerPregnancyHumanDisable to "f">>
		<<set $playerPregnancyBeastDisable to "f">>
		<<set $npcPregnancyDisable to "f">>
	<</if>>
	<<if $famepregnancy is undefined>>
		<<set $famepregnancy to 0>>
		<<set $baseNpcPregnancyChance to 8>>
	<</if>>

	<<if $analingusdisablegiving is undefined or $analingusdisablereceiving is undefined>>
		<<set $analingusdisablegiving to $analdisable>>
		<<set $analingusdisablereceiving to $analdisable>>
	<</if>>

	<<if $analdoubledisable is undefined>>
		<<set $analdoubledisable to $analdisable>>
	<</if>>

	<<if $vaginaldoubledisable is undefined>>
		<<set $vaginaldoubledisable to "f">>
	<</if>>

	<<if $furniturePriceFactor is undefined>>
		<<set $furniturePriceFactor to 1>>
	<</if>>

	<<if $rentmod is undefined>>
		<<set $rentmod to 1>>
	<<elseif $rentmod gt 3>>
		<<set $rentmod to 3>>
	<</if>>

	<<if $money % 1>>
		<<set $money to Math.floor($money)>>
	<</if>>

	<<if $blackjack_played is undefined>>
		<<set $blackjack_played to 0>>
		<<set $blackjack_won to 0>>
		<<set $blackjack_streak to 0>>
		<<set $blackjack_streak_high to 0>>
	<</if>>

	/*To prevent the wardrobe from being inaccessable due to nulls*/
	<<for $_label, $_value range $wardrobe>>
		<<if $_label is "space">>
			<<continue>>
		<</if>>
		<<run $wardrobe[$_label].delete(null)>>
	<</for>>

	<<if $fringetype is "flaps">>
		<<set $fringetype to "thin flaps">>
	<</if>>
	<<if $player.virginity.penile is "Great Hawk" or $player.virginity.vaginal is "Great Hawk">>
		<<earnFeat "Great Hawk the Terror">>
	<</if>>
	<<if $player.virginity.penile is "Black Wolf" or $player.virginity.vaginal is "Black Wolf">>
		<<earnFeat "Great Wolf the Alpha">>
	<</if>>
	<<if $bodyPartSelectedKey isnot undefined>>
		<<set $bodyPartSelected to $bodyPartSelectedKey>>
		<<unset $bodyPartSelectedKey>>
	<</if>>
	<<if $hoodDown is undefined>>
		<<set $hoodDown to 0>>
	<</if>>

	<<if $cardcover is undefined>>
		<<set $cardcover = { style: 0, colour: 'red' }>>
	<</if>>

	<<if $templePromised is undefined>>
		<<set $templePromised to "">>
	<</if>>

	<<if $perNPCFix isnot 2>>
		<<set $perNPCFix to 2>><<unset $perPronounFix>><<unset $perChastityFix>>
		<<set _keys to Object.keys($per_npc)>>
		<<for _npc range _keys>>
			<<if $per_npc[_npc].pronouns is undefined or $per_npc[_npc].pronouns.he is 0>>
				<<generatePronouns $per_npc[_npc]>>
			<</if>>
			<<if $per_npc[_npc].chastity is undefined>>
				<<set $per_npc[_npc].chastity to {penis:"", vagina:"", anus:""}>>
			<</if>>
			<<if $per_npc[_npc].role is undefined>>
				<<set $per_npc[_npc].role to "normal">>
			<</if>>
			<<if $per_npc[_npc].condom is undefined>>
				<<set $per_npc[_npc].condom to false>>
			<</if>>
			<<if $per_npc[_npc].name_known is undefined>>
				<<set $per_npc[_npc].name_known to 0>>
			<</if>>
		<</for>>
	<</if>>

	<<if $sidebarRenderer is undefined>>
		<<set $sidebarRenderer to 'canvas'>>
	<</if>>
	<<if $showDebugRenderer is undefined>>
		<<set $showDebugRenderer to !!StartConfig.debug>>
	<</if>>

	<<if $makeup.pbcolour isnot 0 and !($makeup.pbcolour in setup.colours.hair_map)>>
		<<set _record to setup.guessColourInMap(setup.colours.hair_map, $makeup.pbcolour)>>
		<<if _record>>
			<<set $makeup.pbcolour to _record.variable>>
		<<else>>
			<<run Errors.report("Failed to update makeup.pbcolour from " + $makeup.pbcolour)>>
		<</if>>
	<</if>>
	<<for _item range $makeup.owned.hairdye>>
		<<if !(_item.colour in setup.colours.hair_map)>>
			<<set _record to setup.guessColourInMap(setup.colours.hair_map, _item.colour)>>
			<<if _record>>
				<<set _item.colour to _record.variable>>
			<<else>>
				<<run Errors.report("Failed to update dye from " + _item.colour)>>
			<</if>>
		<</if>>
	<</for>>

	<<if $notifyUpdate is undefined>>
		<<set $notifyUpdate = true>>
	<</if>>

	<<if $beedisable is undefined>>
		<<set $beedisable to "f">>
	<</if>>
	<<if $lurkerdisable is undefined>>
		<<set $lurkerdisable to "f">>
	<</if>>
	<<if $prof is undefined>>
		<<set $prof to {}>>
		<<set $prof.spray to 0>>
		<<set $stat_lurkers_captured to 0>>
		<<set $stat_aphrodisiacs_sold to 0>>
		<<set $sadism to 0>>
		<<set $sadism_level to 0>>
	<</if>>

	<<if $horsedisable is undefined>>
		<<set $horsedisable to "f">>
	<</if>>
	<<if $farm_stage gte 10 and $lurkers_held is undefined>>
		<<set $lurkers_held to 0>>
	<</if>>

	<<if $edenprepare is 1 and $edenwall is undefined>>
		<<set $edenwall to 0>>
		<<set $edenchimney to 0>>
		<<set $edenroof to 0>>
	<</if>>

	<<if $stat_panties_stolen is undefined>>
		<<set $stat_panties_stolen to 0>>
		<<set $stat_police to {}>>
		<<set $stat_police.pillory to 0>>
		<<set $stat_police.community to 0>>
		<<set $stat_police.prison to 0>>
	<</if>>

	<<if !$locker_suspicion or !$panties_held or $locker_suspicion lt 0>>
		<<set $locker_suspicion to 0>>
		<<set $panties_held to 0>>
	<</if>>

	<<if $footdisable is undefined>>
		<<set $footdisable to "f">>
		<<set $uncomfortable.lewd to true>>
	<</if>>

	<<if $player.bodyliquid is undefined>>
		<<set $player.bodyliquid to {}>>

		<<for _bodypart range setup.bodyliquid.bodyparts>>
			<<set $player.bodyliquid[_bodypart] to {}>>
			<<set $player.bodyliquid[_bodypart].goo to V[_bodypart+"goo"]>>
			<<set $player.bodyliquid[_bodypart].semen to V[_bodypart+"semen"]>>
			<<run delete V[_bodypart+"goo"]>>
			<<run delete V[_bodypart+"semen"]>>
		<</for>>
	<</if>>

	<<if $npc is 0>>
		<<unset $npc>>
		<<set $npc to []>>
	<<elseif !(Array.isArray($npc))>>
		<<set _npcsubstitute to clone($npc)>>
		<<unset $npc>>
		<<set $npc to [_npcsubstitute]>>
		<<unset _npcsubstitute>>
	<</if>>

	<<if $npcnum is undefined>>
		<<set $npcnum to []>>
	<<elseif !(Array.isArray($npcnum))>>
		<<set _npcsubstitute to clone($npcnum)>>
		<<unset $npcnum>>
		<<set $npcnum to [_npcsubstitute]>>
		<<unset _npcsubstitute>>
	<</if>>

	<<if $npcrow is undefined>>
		<<set $npcrow to []>>
		<<if $npc[0]>>
			<<set $npcrow[0] to 0>>
		<</if>>
	<</if>>

	<<if $choketrait is undefined>>
		<<set $choketrait to 0>>
	<</if>>

	<<if $museumAntiqueJournalHints is undefined>>
		<<set $museumAntiqueJournalHints to []>>
	<</if>>

	<<if $plants_known.includes("red rose")>>
		<<run $plants_known.delete("red rose")>>
		<<set $plants_known.push("red_rose")>>
	<</if>>

	<<if $transformdisabledivine is undefined>>
		<<if $transformdisable is "f">>
			<<set $transformdisabledivine to "f">>
		<<else>>
			<<set $transformdisabledivine to "t">>
		<</if>>
	<</if>>

	<<if $penisexist isnot undefined and ($player.penisExist != $penisexist or $player.vaginaExist != $vaginaexist)>>
		<<set $player.vaginaExist to ($player.gender isnot "m")>>
		/* <<set $vaginaexist to ($player.gender isnot "m" ? 1 : 0)>> */
		<<set $player.penisExist to ($player.gender isnot "f")>>
		/* <<set $penisexist to ($player.gender isnot "f" ? 1 : 0)>> */
	<</if>>

	<<if $penisexist isnot undefined>>
		<<unset $penisexist>>
		<<unset $vaginaexist>>
	<</if>>

	<<if $NPCName[0].penis is 0>>
		<<initnpcgender>>
	<</if>>

	<<if $kylar is undefined>>
		<<set $kylar to {}>>
		<<set $kylar.raped to 0>>
		<<set $kylar.riddle to 0>>
		<<set $kylar.timer to {halls:0,street:0,home:0,love:0}>>
		<<set $kylarSeen to []>>
	<</if>>
	<<if $kylarsydneywriting is 1>>
		<<set $kylarSeen.pushUnique("sydneyWriting")>>
		<<unset $kylarsydneywriting>>
	<</if>>
	<<if $sydneySeen isnot undefined>>
		<<if $sydneySeen.includes("kylarwriting")>>
			<<set $kylarSeen.pushUnique("sydneyWriting")>>
			<<run delete $sydneySeen.pushUnique("kylarwriting")>>
		<</if>>
	<</if>>
	<<if $kylarraped isnot undefined>>
		<<set $kylar.raped to $kylarraped>>
		<<unset $kylarraped>>
	<</if>>
	<<if $kylartimer isnot undefined>>
		<<set $kylar.timer.halls to $kylartimer>>
		<<unset $kylartimer>>
	<</if>>
	<<if $kylarstreettimer isnot undefined>>
		<<set $kylar.timer.street to $kylarstreettimer>>
		<<unset $kylarstreettimer>>
	<</if>>
	<<if $kylarsaidlove isnot undefined>>
		<<set $kylarSeen.pushUnique("saidLove")>>
		<<unset $kylarsaidlove>>
	<</if>>
	<<if $kylarspray is 1>>
		<<set $kylarDaily.spray to true>>
		<<unset $kylarspray>>
	<</if>>
	<<if $kylar_bodywriting is 1>>
		<<set $kylarDaily.bodywriting to true>>
		<<unset $kylar_bodywriting>>
	<</if>>
	<<if $kylar_invite isnot undefined>>
		<<if $kylar_invite is 1>>
			<<set $kylarDaily.invite to "home">>
		<<else>>
			<<set $kylarDaily.invite to "school">>
		<</if>>
		<<unset $kylar_invite>>
	<</if>>
	<<if $kylar_undies_taken isnot undefined>>
		<<set $kylarDaily.undies to true>>
	<</if>>
	<<if $kylarpantiescheck isnot undefined>>
		<<set $kylarSeen.pushUnique("commando")>>
		<<unset $kylarpantiescheck>>
	<</if>>
	<<if $kylarsleeprape isnot undefined>>
		<<set $kylarDaily.sleepRape to true>>
		<<unset $kylarsleeprape>>
	<</if>>
	<<if $kylarconfessiontimer isnot undefined>>
		<<set $kylar.timer.love to $kylarconfessiontimer>>
		<<unset $kylarconfessiontimer>>
	<</if>>
	<<if $kylarhome isnot undefined>>
		<<set $kylar.home to $kylarhome>>
		<<unset $kylarhome>>
	<</if>>
	<<if $kylarhometimer isnot undefined>>
		<<set $kylar.timer.home to $kylarhometimer>>
		<<unset $kylarhometimer>>
	<</if>>
	<<if $kylarhomeinterrupted isnot undefined>>
		<<set $kylarSeen.includes("home")>>
		<<unset $kylarhomeinterrupted>>
	<</if>>
	<<if $kylarwalk isnot undefined>>
		<<set $daily.kylar.walk to true>>
		<<unset $kylarwalk>>
	<</if>>
	<<if $kylarFountain isnot undefined>>
		<<set $kylar.fountain to $kylarFountain>>
		<<unset $kylarFountain>>
	<</if>>
	<<if $kylarFountainIntroWinter>>
		<<set $kylarSeen.pushUnique("fountainWinter")>>
		<<unset $kylarFountainIntroWinter>>
	<</if>>
	<<if $kylarFountainKiss isnot undefined>>
		<<if $kylarFountainKiss is 1>>
			<<set $daily.kylar.walkKiss to true>>
		<</if>>
		<<unset $kylarFountainKiss>>
	<</if>>
	<<if $kylarFountainIntro isnot undefined>>
		<<if $kylarFountainIntro is 1>>
			<<set $kylarSeen.pushUnique("fountainIntro")>>
		<</if>>
		<<unset $kylarFountainIntro>>
	<</if>>
	<<if $kylarFountainCoin isnot undefined>>
		<<set $kylar.fountainCoin to $kylarFountainCoin>>
		<<unset $kylarFountainCoin>>
	<</if>>
	<<if $kylarfamestage isnot undefined>>
		<<set $kylar.fameStage to $kylarfamestage>>
		<<unset $kylarfamestage>>
	<</if>>
	<<if $kylarchatintro isnot undefined>>
		<<set $kylarSeen.pushUnique("chatIntro")>>
		<<unset $kylarchatintro>>
	<</if>>
	<<if $kylarcanteen isnot undefined>>
		<<set $kylarSeen.pushUnique("canteen")>>
		<<unset $kylarcanteen>>
	<</if>>
	<<if $kylarriddle isnot undefined>>
		<<set $kylar.riddle to $kylarriddle>>
		<<unset $kylarriddle>>
	<</if>>
	<<if $kylar_play isnot undefined>>
		<<set $kylar.play to $kylar_play>>
		<<unset $kylar_play>>
	<</if>>
	<<if typeof($semen_produced_stat) is "string">>
		<<set $semen_produced_stat to parseFloat($semen_produced_stat)>>
	<</if>>

	<<if !(Array.isArray($event))>>
		<<unset $event>>
	<</if>>

	<<if $multipleWardrobes is undefined>>
		<<set $multipleWardrobes to "isolated">>
	<</if>>

	<<if $nectar_drank_stat is undefined>>
		<<set $nectar_drank_stat to 0>>
		<<set $tentacleMouth to 0>>
		<<set $tentacleAnus to 0>>
		<<set $tentacleAnusBaby to 0>>
		<<set $tentacleVagina to 0>>
		<<set $tentaclePenis to 0>>
	<</if>>

	<<if $index is undefined and $enemyno gte 1>>
		<<for _n to 0; _n lt $NPCList.length; _n++>>
			<<if $NPCList[_n].desc is $description>>
				<<set $index to _n>>
				<<break>>
			<</if>>
		<</for>>
	<</if>>

	<<if !$NPC_names_m>>
		<<init_names>>
	<</if>>

	<<if $prison and $prison.kylar is undefined>>
		<<set $prison.kylar to 0>>
	<</if>>

	<<if $plantdisable is undefined>>
		<<set $plantdisable to "f">>
	<</if>>

	<!-- Makes sure $kennel_treats aren't strings due to bug. -->
	<<if typeof $kennel_treats isnot "number">>
		<<set $kennel_treats to 0>>
	<</if>>
	<<if $bodywritingLvl is undefined>>
		<<set $bodywritingLvl to ($bodywritingdisable is "f" ? 3 : 0)>>
	<</if>>

	/* Start of Target variables */
	<<if $npcDAP isnot undefined>>
		<<set $anustarget to $npcDAP[0]>>
		<<set $anusdoubletarget to $npcDAP[1]>>
		<<unset $npcDAP>>
	<</if>>

	<<if $targetYourself is undefined>>
		<<set $targetYourself to false>>
	<</if>>

	<<if $NPCList isnot undefined and $NPCList[0].active is undefined>>
		<<for _i = 0; _i < $NPCList.length; _i++>>
			<<set $NPCList[_i].active to 0>>
		<</for>>
		<<if $combat is 1>>
			<<for _i = 0; _i < $enemyno; _i++>>
				<<set $NPCList[_i].active to "active">>
				<<if $NPCList[_i].type is 0>>
					<<set $NPCList[_i].type to "human">>
				<</if>>
				<<set $NPCList[_i].healthmax to $NPCList[_i].health>>
			<</for>>
		<</if>>
	<</if>>

	<<if $breastuse isnot undefined and $breastuse isnot 0>>
		<<set $chestuse to $breastuse>>
		<<unset $breastuse>>
	<</if>>

	<<if $machine isnot undefined and $machine.number lte 0>>
		<<unset $machine>>
	<<elseif $enemytype isnot "machine">>
		<<unset $machine>>
	<<elseif $combat isnot 1>>
		<<unset $machine>>
	<</if>>
	/* End of Target variables */

	<!-- remove duplicates from the hints list -->
	<<if $objectVersion.museumAntiques lt 8>>
		<<set $objectVersion.museumAntiques to 8>>
		<<set _newlist to []>>
		<!-- run in reverse to preserve only most recently added entries -->
		<<for _i = $museumAntiqueJournalHints.length - 1; _i gte 0; _i-->>
			<<if $museumAntiques.antiques[$museumAntiqueJournalHints[_i]] is "notFound">>
				<<set _newlist.pushUnique($museumAntiqueJournalHints[_i])>>
			<</if>>
		<</for>>
		<<set $museumAntiqueJournalHints to clone(_newlist).reverse()>>
	<</if>>

	<<if $stealtarget is undefined>>
		<<if $combat is 1 and $stealstate is 3>>
			<<set $stealtarget to "012345">>
		<<else>>
			<<set $stealtarget to "">>
		<</if>>
	<</if>>

	<<if $stealdifficulty is undefined>>
		<<set $stealdifficulty to 1>>
	<</if>>

	<<if $stealstate isnot undefined>>
		<<set $stealstateleft to $stealstate>>
		<<set $stealstateright to $stealstate>>
		<<unset $stealstate>>
	<</if>>

	<<if $righttarget is undefined>>
			<<set $righttarget to 0>>
			<<set $lefttarget to 0>>
	<</if>>

	<<if !$NPCList[0].chastity>>
		<<for _i to 0; _i lt $NPCList.length; _i++>>
			<<set $NPCList[_i].chastity to {penis: "", vagina: "", anus: ""}>>
		<</for>>
	<</if>>

	<<for _i to 0; _i lt $NPCList.length; _i++>>
		<<if $NPCList[_i].pronoun and (!$NPCList.pronouns or !$NPCList.pronouns.man)>>
			<<generatePronouns $NPCList[_i]>>
		<</if>>
	<</for>>

	<!-- pregnancyVar was moved to <<backComp>>-->
<</widget>>

<<widget "variablesVersionUpdate2">>
	/* 0.4.0.0 is the last version that should need the old vvu */

	<<run window.backCompPillsInventory()>> /* restructure V.sexStats.pills inventory */

	<!--Tracking for the Plant Lover trait-->
	<<if $nectar_addiction is undefined>>
		<<set $nectar_addiction to 0>>
		<<set $nectar_timer to 0>>
	<</if>>

	<<if $hypnotised is undefined>>
		<<set $hypnotised to 0>>
		<<set $famemodel to 0>>
	<</if>>
	<<if $chef_state gte 5 and $photo_known is undefined>>
		<<set $photo_known to 1>>
	<</if>>
	<<if $cardcover is undefined>>
		<<set $cardcover = { style: 0, colour: 'red' }>>
	<</if>>

	<<if $sleepStat is undefined>>
		<<set $sleepStat to 0>>
	<</if>>

	<<for $_i = 0; $_i < $NPCName.length; $_i++>>
		<<if $NPCName[$_i].virginity is undefined>>
			<<initNNPCVirginity $_i>>
		<</if>>
	<</for>>

	<<if $player.virginity.vaginal is "Harper" or $player.virginity.penile is "Harper">>
		<<earnFeat "Harper the Hypnotist">>
	<</if>>
	<<if $player.virginity.vaginal is "Morgan" or $player.virginity.penile is "Morgan">>
		<<earnFeat "Morgan the Lost">>
	<</if>>


	<!-- Jimmy: DefaultActions JS routine for error correction. -->
	<<run
		/* Perform check for broken default action structures. */
		if ($actionDefaults != undefined) {
			/* Test 1 - If regrab[0] is an object, there was a failure. */
			let temp = DefaultActions.get('rape', 'Everyone', 'regrab')[0];
			if (typeof temp === 'object') {
				/* Reset everything as a final step, the error is consumed. */
				V.actionDefaults = temp;
				V.actionDefaults = DefaultActions.check(DefaultActions.setup())
			}
		}
	>>

	<!-- Jimmy: Updater for NNPCs that lack pronouns structures.
				Based off of $perNPCFix located in VVU -->
	<<if $pronounsNPCFix isnot 1>>
		<<for $_npc range $NPCName>>
			<<if $_npc.pronouns is undefined>>
				<<generatePronouns $_npc>>
			<</if>>
		<</for>>
		<<set $pronounsNPCFix = 1>>
	<</if>>

	<!-- persistent npc fix v3 -->
	<<if $perNPCFix isnot 4>>
		<<set $perNPCFix to 4>>
		<!-- clean nulls and undefineds from name lists -->
		<<run $NPC_names_f.delete(null, undefined)>>
		<<run $NPC_names_m.delete(null, undefined)>>

		<<set $_per_keys to Object.keys($per_npc)>>
		<<for $_per_ctrl range $_per_keys>>
			<<if !$per_npc[$_per_ctrl]>>
				<!-- remove null and undefined -->
				<<run delete $per_npc[$_per_ctrl]>>
			<<elseif !$per_npc[$_per_ctrl].type>>
				<!-- type fix -->
				<<set $per_npc[$_per_ctrl].type to "human">>
			<</if>>
		<</for>>

		<!-- prison npcs -->
		<<for $_npc range ["anxious_guard", "methodical_guard", "relaxed_guard", "veteran_guard", "scarred_inmate"]>>
			<<if $per_npc[$_npc]>>
				<!-- restore null names-->
				<<if !$per_npc[$_npc].name>>
					<<set $per_npc[$_npc].name to ($per_npc[$_npc].pronoun is "m" ? $NPC_names_m.pluck() : $NPC_names_f.pluck())>>
				<</if>>
				<!-- fix descriptions -->
				<<if $per_npc[$_npc].name_known>>
					<<set $per_npc[$_npc].fullDescription to $per_npc[$_npc].name>>
				<<else>>
					<<set $per_npc[$_npc].fullDescription to $_npc.replace('_', ' ')>>
				<</if>>
			<</if>>
		<</for>>
	<</if>>

	<!-- v0.3.5.4: pubic hair was accidentally disabled on new saves bc it wasn't initialised properly. -->
	<<pbhairinit>>

	<!-- v0.3.6.2: blind stats mode -->
	<<if $statdisable is undefined>>
		<<set $statdisable to "f">>
	<</if>>

	<!-- v0.3.6.2: tending update -->
	<<if $tendingvars is undefined>>
		<<set $tendingvars to {}>>
		<<for $_plot_locations range $plots>>
			<<for $_plot range $_plot_locations>>
				<<set $_plot.plant to ($_plot.name and $_plot.stage gt 0 ? $_plot.name : "none")>>
				<<run delete $_plot.name>>
			<</for>>
		<</for>>
	<</if>>

	<<if $tending_yield_factor is undefined>>
		<<set $tending_yield_factor to 5>>
	<<else>>
		<<set $tending_yield_factor to Math.clamp($tending_yield_factor, 1, 10)>>
	<</if>>

	<!-- Jimmy: [<=0.3.6.2] Asserts that $outfit[].colors is assigned, default to false. -->
	<<if $outfit_update is undefined or $outfit_update lt 3>>
		<<set $outfit_update to 3>>
		<<for $_i to 0; $_i lt $outfit.length; $_i++>>
			<<if $outfit[$_i].colors is undefined>>
				<<set $outfit[$_i].colors to false>>
			<</if>>
		<</for>>
	<</if>>

	<!-- v0.3.6.2: herm wraith fix -->
	<<if $per_npc.wraith and ["m", "f"].includes($per_npc.wraith.gender) and $per_npc.wraith.penis isnot "none" and $per_npc.wraith.vagina isnot "none">>
		<<if $per_npc.wraith.gender is "m">><<set $per_npc.wraith.vagina to "none">><</if>>
		<<if $per_npc.wraith.gender is "f">><<set $per_npc.wraith.penis to "none">><</if>>
	<</if>>

	<!-- v0.3.6.2: Giving Robin clothes if their outfits array is already defined, but they lack the proper normal clothes -->
	<<if $NPCName[$NPCNameList.indexOf("Robin")].outfits isnot undefined and !$NPCName[$NPCNameList.indexOf("Robin")].outfits.includes("maleSchool")>>
		<<set $_robin to $NPCName[$NPCNameList.indexOf("Robin")]>>
		<<if $_robin.outfits.includes("shirt")>>
			<<run $_robin.outfits.delete("shirt")>>
			<<set $_robin.outfits.pushUnique("robinGiftShirt")>>
		<</if>>
		<<if $_robin.outfits.includes("sundress")>>
			<<run $_robin.outfits.delete("sundress")>>
			<<set $_robin.outfits.pushUnique("robinGiftSundress")>>
		<</if>>
		<<if $_robin.outfits.includes("kimono")>>
			<<run $_robin.outfits.delete("kimono")>>
			<<set $_robin.outfits.pushUnique("robinGiftKimono")>>
		<</if>>
		<<if $_robin.outfits.includes("tuxedo")>>
			<<run $_robin.outfits.delete("tuxedo")>>
			<<set $_robin.outfits.pushUnique("robinGiftTux")>>
		<</if>>
		<<if $_robin.outfits.includes("gothic gown")>>
			<<run $_robin.outfits.delete("gothic gown")>>
			<<set $_robin.outfits.pushUnique("robinGiftGown")>>
		<</if>>
		<<if $_robin.outfits.includes("christmas")>>
			<<run $_robin.outfits.delete("christmas")>>
			<<set $_robin.outfits.pushUnique("robinGiftChristmas")>>
		<</if>>
		<<initNNPCClothes "Robin" "update">>
		<<set $_robin.outfits.pushUnique("naked", "maleDefault", "femaleDefault")>>
		<<if $_robin.currentOutfit>>
			<<switch $_robin.currentOutfit>>
				<<case "shirt">><<set $_clothesReplace to "robinGiftShirt">>
				<<case "sundress">><<set $_clothesReplace to "robinGiftSundress">>
				<<case "kimono">><<set $_clothesReplace to "robinGiftKimono">>
				<<case "tuxedo">><<set $_clothesReplace to "robinGiftTuxedo">>
				<<case "gothic gown">><<set $_clothesReplace to "robinGiftGown">>
				<<case "christmas">><<set $_clothesReplace to "robinGiftChristmas">>
			<</switch>>
			<<npcClothesName $_robin $_clothesReplace>>
			<<run delete $_robin.currentOutfit>>
		<</if>>
	<</if>>

	<!-- v0.3.6.2: Fixing undefined animations, printing one-time notification for any who had them disabled. -->
	<<if $objectVersion.animations lt 1 or $objectVersion.animations is undefined>>
		<<set $objectVersion.animations to 1>>
		<<if $combatAnimations is false and $sidebarAnimations is false>>
			<div id="animWarning" @class="'no-numberify '">
				<span class='teal'>Animations are currently disabled. This may have been caused by a one-time bug. You can re-enable animations immediately, or in the "general" tab of the settings menu.</span> |
				<<link "Enable all animations">><<addclass #animWarning "hidden">><<set $combatAnimations to true>><<set $sidebarAnimations to true>><</link>> |
				<<link "Disable this message">><<addclass #animWarning "hidden">><</link>>
			</div>
		<</if>>
		<<if $combatAnimations is undefined>>
			<<set $combatAnimations to true>>
			<<set $sidebarAnimations to true>>
		<</if>>
	<</if>>

	<!-- v0.3.6.2: Improved debug menu -->
	<<if $debug_favourite is undefined>> /* add favourites constant variable */
		<<set $debug_favourite = []>>
	<</if>>

	<!-- v0.3.6.2: Init variables necessary for custom contact lenses -->
	<<if ndef $lenses_ordered>>
		<<set $lenses_ordered to []>>
	<</if>>
	<<if ndef $custom_lenses_already_ordered>>
		<<set $custom_lenses_already_ordered to 0>>
	<</if>>
	<<if ndef $custom_eyecolours>>
		<<set $custom_eyecolours to []>>
	<</if>>
	<<if ndef $makeup.owned.custom_eyelenses>>
		<<set $makeup.owned.custom_eyelenses to []>> /* pharmacy custom eye lenses */
	<</if>>

	<<if $adultShop is undefined>>
		<<set $adultShop to {
			ban: 0,
			banExtension: false,
			spotted: false,
			stolenClothes: 0,
			totalStolenClothes: 0,
			banCount: 0,
			rng: random(0,1000)
		}>>
	<</if>>

	<!-- v0.3.6.2: convert all "underclothes" to "underlowerclothes" -->
	<<if $handtarget is "underclothes">>
		<<set $handtarget to "underlowerclothes">>
	<</if>>

	<!-- v0.3.6.2: refactor transformation stuff -->
	<<setupTransformationPiecesObject>>

	<<for $_npc range $NPCList>>
		<<if $_npc.mouth is "underclothes">>
			<<set $_npc.mouth to "underlowerclothes">>
		<</if>>
		<<if $_npc.lefthand is "underclothes">>
			<<set $_npc.lefthand to "underlowerclothes">>
		<</if>>
		<<if $_npc.righthand is "underclothes">>
			<<set $_npc.righthand to "underlowerclothes">>
		<</if>>
	<</for>>

	<!-- v0.3.6.2: convert all "understruggle" to "underlowerstruggle" -->
	<<if $understruggle isnot undefined>>
		<<set $underlowerstruggle to $understruggle>>
		<<unset $understruggle>>
	<</if>>

	<!-- v0.3.6.2: remove all of the deprecated variables used in npcstrip -->
	<!-- note for the future: it's probably a good idea to avoid using these variable names for anything else in the future, they're too non-specific. -->
	<<if $anus>>
		<<unset $lefthand, $righthand, $anus, $gender1, $penis, $vagina>>
		<<unset $lefthand2, $righthand2, $anus2, $gender2, $penis2, $vagina2>>
		<<unset $lefthand3, $righthand3, $anus3, $gender3, $penis3, $vagina3>>
		<<unset $lefthand4, $righthand4, $anus4, $gender4, $penis4, $vagina4>>
		<<unset $lefthand5, $righthand5, $anus5, $gender5, $penis5, $vagina5>>
		<<unset $lefthand6, $righthand6, $anus6, $gender6, $penis6, $vagina6>>
	<</if>>

	<!-- v0.3.7.4: NPC sex toys -->
	<<if $toydildodisable is undefined>>
		<<set $toydildodisable to "f">>
	<</if>>
	<<if $toywhipdisable is undefined>>
		<<set $toywhipdisable to "f">>
	<</if>>

	<!-- v0.3.6.2 unnamed npc virginity update -->
	<<if $npcVirginityChance is undefined>>
		<<set $npcVirginityChance to 50>>
		<<set $npcVirginityChanceAdult to 10>>
	<</if>>

	<!-- for v0.3.7.1 and earlier versions -->
	<<if _version lte 30701>>
		<<run window.patchCorruptLensesColors()>> /* custom contact lenses fix corrupt colours */
	<</if>>
	<!-- for v0.3.7.4 and earlier versions -->
	<<if _version lte 30704>>
		<<if ndef $pillsTakenOn>>
			<<set $pillsTakenOn to ($monthday.toString() + $month + $year.toString())>>
		<</if>>
		<<if ndef $famemodel>>
			<<set $famemodel to 0>>
		<</if>>
		<<if ndef $heterochromia>>
			<<set $heterochromia to 0>>
			<<if $cat > 6>>
				<<set $cat to 6>>
			<</if>>
		<</if>>
		<<if $ironmanmode == undefined>>
			<<set $ironmanmode to false>>
		<</if>>
		<<if def $breastsize>>
			<<set $player.breastsize to clone($breastsize)>>
			<<unset $breastsize>>
		<</if>>
		<<if def $penissize>>
			<<set $player.penissize to clone($penissize)>>
			<<unset $penissize>>
		<</if>>
		<<if def $bottomsize>>
			<<set $player.bottomsize to clone($bottomsize)>>
			<<unset $bottomsize>>
		<</if>>
		<<run window.createInventoryObject()>>

		<!-- fix for desynch between TFs and $specialTransform -->
		<<if $demon gte 1 or $angel gte 1 or $fallenangel gte 2>>
			<<set $specialTransform to 1>>
		<<else>>
			<<set $specialTransform to 0>>
		<</if>>

		<!-- fix for transformation traits trauma bugs -->
		<<if $transformationParts.traits.fangs is "hidden">>
			<<set $transformationParts.traits.fangs to "default">>
		<</if>>
		<<if $transformationParts.traits.sharpEyes is "hidden">>
			<<set $transformationParts.traits.sharpEyes to "default">>
		<</if>>
	<</if>>

	<!-- v0.3.7.4 RobinCrossDressingQuest update -->
	<<if $NPCName[$NPCNameList.indexOf("Robin")].cdquest is undefined>>
		<<set $NPCName[$NPCNameList.indexOf("Robin")].cdquest to 0>>
	<</if>>

	<!-- v0.3.7.4: sleep code readability update -->
	<<if $schoolwake isnot undefined>>
		<<unset $schoolwake>>
	<</if>>

	<!-- v0.3.7.4: An old pregnancy code issue where .fertilize was used and not updated. -->
	<<script>>
		const pregnancy = V.sexStats.anus.pregnancy;
		if(Array.isArray(pregnancy.fetus)){
			for (let i = 0; i < pregnancy.fetus.length; i++) {
				const slot = pregnancy.fetus[i];
				if (slot != undefined && slot.hasOwnProperty('fertilized')) {
					slot.fertilised = slot.fertilized;
					delete slot.fertilized;
				}
			}
			/* Part 2: Futa manipulation. */
			let hasFuta = false;
			for (let i = 0; i < pregnancy.fetus.length; i++) {
				const slot = pregnancy.fetus[i];
				if (slot != undefined && slot.stats != null && slot.stats.gender === 'Futa') {
					if (hasFuta) {
						/* Abort the futa. */
						pregnancy.fetus[i].toDelete = true;
					} else {
						hasFuta = true;
						if (V.pregnancyStats.parasiteDoctorEvents < 2) {
							V.pregnancyStats.parasiteDoctorEvents = 2;
						}
						pregnancy.motherStatus = 2;
					}
				}
			}
			V.sexStats.anus.pregnancy.fetus = V.sexStats.anus.pregnancy.fetus.filter(p => p && !p.toDelete);
		}
	<</script>>

	<!-- v0.3.7.4: sex toy and double penetration stats-->
	<<if $sextoystat is undefined>>
		<<set $sextoystat to 0>>
		<<set $analdoublestat to 0>>
		<<set $vaginaldoublestat to 0>>
	<</if>>

	<!-- v0.3.7.4: underground brothel cleanup -->
	<<if $undergroundtime isnot undefined>>
		<<set $undergroundbrothel to {
			"time": $undergroundtime,
			"timepass": true,
			"water": $undergroundwater,
			"escape": $undergroundescape
		}>>
		<<unset $undergroundtime>>
		<<unset $undergroundwater>>
		<<unset $undergroundescape>>
		<<set $undergroundbrothelescaped to true>>
	<</if>>

	<<if $adultshopprogress is undefined>>
		<<set $adultshopprogress to 0>>
	<</if>>
	<<if $adultshopcontribution is undefined>>
		<<set $adultshopcontribution to 0>>
	<</if>>
	<<if $facesitdisable is undefined>>
		<<set $facesitdisable to "f">>
	<</if>>

	<<if $objectVersion.sexToys is undefined>>
		<!-- First fix to sextoy objects: Specifically for NNPCs containing an undefined string in their desc. -->
		<<script>>
			V.NPCName.forEach(nnpc => {
				if (nnpc.strapons instanceof Array) {
					nnpc.strapons.forEach(strapon => {
						if (typeof strapon.description === 'string') {
							strapon.description = strapon.description.replace(/undefined/, 'dildo');
						}
					});
				}
			});
		<</script>>
		<<set $objectVersion.sexToys to 1>>
	<</if>>

	<!-- v0.3.8.2: sex toy and double penetration stats-->
	<<if $toymultiplepenetration is undefined>>
		<<set $toymultiplepenetration to "f">>
	<</if>>

	<!-- v0.3.8.2: sextoy inventory code cleanup -->
	<<if $passage.startsWith("Sextoys Inventory ") and ["Sextoys Inventory Home","Sextoys Inventory Brothel","Sextoys Inventory Cottage","Sextoys Inventory Cabin"].includes($passage)>>
		<<set $sextoyInvReturnLink to {
			"Sextoys Inventory Home": "Bedroom",
			"Sextoys Inventory Brothel": "Brothel Dressing Room",
			"Sextoys Inventory Cottage": "Farm Bedroom",
			"Sextoys Inventory Cabin": "Cabin Actions"
		}[$passage]>>
	<</if>>

	<!-- v.0.3.8.2: undefined $control -->
	<<if $control is undefined>>
		<<if $controlSaved>>
			<<set $control to $controlSaved>><<unset $controlSaved>>
		<<else>>
			<<set $control to $controlmax>>
		<</if>>
	<</if>>

	<!-- 0.3.8.2: starting season backwards compatibility check -->
	<<if $startingseason is undefined>>
		<<set $startingseason to "autumn">>
	<</if>>

	<!-- v0.3.8.6: Fixing mismatched specialtransform after losing your virginity -->
	<<if $demon gte 1 or $angel gte 1 or $fallenangel gte 2>>
		<<set $specialTransform to 1>>
	<<else>>
		<<set $specialTransform to 0>>
	<</if>>

	<!-- v0.3.8.6: Traubin overhaul -->
	<<if $robinTraumaMultiplier is undefined>>
		<<set $robinTraumaMultiplier to 1>>
	<</if>>

		<<if $robinSeen is undefined>>
		<<set $robinSeen to []>>
	<</if>>

	<<if !$robinTattoo>>
		<<set $robinTattoo to []>>
	<</if>>

	<<if $robinPunishments is undefined>>
		<<set $robinPunishments to []>>
		<<if $NPCName[$NPCNameList.indexOf("Robin")].trauma gt 0>>
			<<set $robinPunishments.pushUnique("docks")>>
			<<set $robinLastPunishment to "docks">>
		<</if>>
	<</if>>

	<<if $robinmissing is undefined>>
		<<set $robinmissing to 0>>
	<<elseif $robinmissing is 1>>
		<<set $robinmissing to "docks">>
		<<set $robinLastPunishment to "docks">>
	<</if>>

	<<if $baileypaychain is undefined>>
		<<set $baileypaychain to 0>>
	<</if>>

	<<if $NPCList[0].index is undefined>>
		<<for _i to 0; _i lt $NPCList.length; _i++>>
			<<set $NPCList[_i].index to _i>>
		<</for>>
	<</if>>

	<!-- v0.3.8.6: Awarding the "Robin's Song" feat to players who missed it -->
	<<if $NPCName[$NPCNameList.indexOf("Robin")].cdquest gte 7>>
		<<earnFeat "Robin's Song">>
	<</if>>

	<!-- v0.3.8.6: Kylar rework -->
	<<if $kylar.fameStage is undefined>>
		<<set $kylar.fameStage to 0>>
	<</if>>

	<!-- v0.3.9.0: update -->
	<<if $pregnancyspeechdisable is undefined>>
		<<set $pregnancyspeechdisable to "f">>
	<</if>>
	<<if $stray_happiness is undefined>>
		<<set $stray_happiness to 50>>
	<</if>>

	<!-- v0.3.9.2: Wardrobe teleport error fix -->
	<<if $clothes_choice isnot undefined and !["Clothing Shop", "Forest Shop", "School Library Shop", "Adult Shop Store"].includes($passage)>>
		<<unset $clothes_choice>>
	<</if>>

	<!-- v0.3.9.3: Robin pillory bug -->
	<<if $robinPillory and $robinPillory.danger gt 15>>
		<<unset $robinPillory>>
	<</if>>

	<!-- v0.3.9.3: Heterochromia disablable -->
	<<if $transformationParts.cat.heterochromia is undefined>>
		<<if $cat gte 7>>
			<<set $transformationParts.cat.heterochromia to "default">>
		<<else>>
			<<set $transformationParts.cat.heterochromia to "disabled">>
		<</if>>
	<</if>>

	<!-- v0.3.9.3: customColors 'value' property added -->
	<<if $objectVersion.customColors lt 5 or $objectVersion.customColors is undefined>>
		<<if $customColors.value is undefined>>
			<<set $customColors.value to {primary:100, secondary:100}>>
		<</if>>
		<<set $objectVersion.customColors to 5>>
	<</if>>

	<!-- v0.3.9.3: $retrieveShopCustomColor added // used for shop colour sliders -->
	<<if $retrieveShopCustomColor is undefined or $retrieveShopCustomColor isnot {}>>
		<<set $retrieveShopCustomColor to {}>>
	<</if>>

	<<if !$objectVersion.transformations>>
		<<set $_demon to $transformationParts.demon>>
		<<set $_tfConverter to {
			blue: {
				type: 'default',
				colour: { h: 240, s: 100, l: 50 }
			},
			lime: {
				type: 'default',
				colour: { h: 90, s: 100, l: 50 }
			},
			red: {
				type: 'default',
				colour: { h: 0, s: 100, l: 50 }
			},
			yellow: {
				type: 'default',
				colour: { h: 55, s: 100, l: 50 }
			},
			pink: {
				type: 'succubus',
				colour: { h: 320, s: 100, l: 50 }
			}
		}>>
		<<set $_demonHorn to $_tfConverter[$transformationParts.demon.horns]>>
		<<if typeof $_demonHorn === 'object'>>
			<<set $_demon.horns to $_demonHorn.type>>
			<<set $_demon.horns_colour to $_demonHorn.colour>>
		<</if>>
		<<set $_demonWings to $_tfConverter[$transformationParts.demon.wings]>>
		<<if typeof $_demonWings === 'object'>>
			<<set $_demon.wings to $_demonWings.type>>
			<<set $_demon.wings_colour to $_demonWings.colour>>
		<</if>>
		<<set $_demonTail to $_tfConverter[$transformationParts.demon.tail]>>
		<<if typeof $_demonTail === 'object'>>
			<<set $_demon.tail to $_demonTail.type>>
			<<set $_demon.tail_colour to $_demonTail.colour>>
		<</if>>
		<<set $objectVersion.transformations to 0>>
	<</if>>

	<!-- v0.3.10.0 update -->
	<<if $leftarmbruise is undefined>>
		<<set $leftarmbruise to 0>>
		<<set $rightarmbruise to 0>>
	<</if>>

	<<if $urinestat is "undefined">>
		<<set $urinestat to 0>>
	<</if>>

	<<if $hypnosis_traits is undefined>>
		<<set $hypnosis_traits to {}>>
	<</if>>

	<!-- v0.3.10.0 farm wage fix -->
	<<if $farm and $farm.wage gte 1500>>
		<<set $farm.wage to $farm.wage / 100>>
	<</if>>

	<!-- v0.3.10.1: Kylar dominance -->
	<<if $NPCName[$NPCNameList.indexOf("Kylar")].dom gte 1 and ($bus isnot "kylarmanor" or $syndromekylar is 1)>>
		<<npcincr Kylar dom -100>>
	<</if>>

	<!-- v0.3.10.3: fix for Kylar being initialized weirdly in combat after a prior bug set kylar's NPCName data weirdly -->
	<<if _version lte 31003>>
		<<set _kylar to $NPCName[$NPCNameList.indexOf("Kylar")]>>
		<<if _kylar.penis isnot "none">>
			<<set _kylar.penis to "clothed">>
		<</if>>
		<<if _kylar.vagina isnot "none">>
			<<set _kylar.vagina to "clothed">>
		<</if>>
		<<run delete _kylar.lefthand>>
		<<run delete _kylar.righthand>>
	<</if>>

	<!-- v0.3.10.4: New character lighting variables -->
	<<if $imgLighten != undefined>>
		<<set $lightSpotlight to 0.2>>
		<<set $lightGradient to 0>>
		<<set $lightGlow to 0>>
		<<set $lightFlat to 0>>
		<<set $lightCombat to 0.2>>
		<<set $lightTFColor to 0.2>>

		<<if $imgLighten == "imgLighten">>
			<<set $lightFlat to 0.5>>
		<<elseif $imgLighten == "imgLighten2">>
			<<set $lightFlat to 1>>
		<</if>>

		<<unset $imgLighten>>
	<</if>>

	<<if $estatePersistent and !$estatePersistent.markedCards>>
		<<set $estatePersistent.markedCards = new Set()>>
		<<set $estatePersistent.newDeckTimer = 3>>
	<</if>>

	<!-- v0.3.10: blackjack update -->
	<<initEstatePersistent>>

	<!-- v0.3.10.5: Kylar scene viewer scenes -->
	<<if $NPCName[$NPCNameList.indexOf("Kylar")].state is "prison">>
		<<set $kylarSeen.pushUnique("basement")>>
	<</if>>

	<!-- v0.3.10.5: Hypnotic flaunting -->
	<<if $uncomfortable.hypnosis is undefined>>
		<<set $uncomfortable.hypnosis to true>>
	<</if>>

	<!-- v0.3.10.5: nectar bodyliquid -->
	<<if $player.bodyliquid.neck.nectar is undefined>>
		<<for _bodypart range setup.bodyliquid.bodyparts>>
			<<set $player.bodyliquid[_bodypart].nectar to 0>>
		<</for>>
	<</if>>
	<<unset $goobodycount, $semenbodycount, $liquidbodycount>>

	<!-- v0.3.10.5/0.3.11.0: Overall school performance fix -->
	<<if _version lte 31100>>
		<<run ["science", "maths", "english", "history"].forEach( skill => {
			V[skill] = [0,100,200,400,700,1000].select(V[skill + "trait"] + 1);
		})>>
		<<set $school to $science + $english + $maths + $history>>
	<</if>>

	<!-- v0.3.11.0: Dancing Fixes -->
	<<if _version lte 31100 and $dancing is 1>>
		<<if $dance_place is undefined>>
			<<set $dance_place to 1>>
		<</if>>
		<<set $dance_place -= 1>>
	<</if>>

	<!-- v0.3.11.0: Combat images -->
	<<if $combatimages is undefined>>
		<<set $combatimages to $images>>
	<</if>>

	<!-- v0.3.10.0/v0.3.10.1/0.3.11.0 NaN variables fix -->
	<<if _version lte 31100>>
		/*Check to see if these variables are NaN. If they are, reset them to 0*/
		<<run ["stress", "drugged", "drunk", "hallucinogen", "milk_amount", "orgasmcount", "urinestat",
			   "traumagain", "stressgain", "traumasaved", "stresssaved", "enemyanger",
			   "enemytrust", "turnCount"].forEach( v => V[v] ? true : V[v] = 0)>>
	<</if>>

	<!-- v0.3.11.4 -->
	<<if $outfitTmp is undefined>>
		<<set $outfitTmp to {}>>
	<</if>>

	<!-- v0.3.11.4 - Remove $crimemax -->
	<<if $crimemax isnot undefined>>
		<<unset $crimemax>>
	<</if>>

	<!-- v0.3.11.4 options rework -->
	<<if $options is undefined>>
		<<set $options to {
			neverNudeMenus: $neverNudeMenus !== undefined ? $neverNudeMenus : false,
			autosaveDisabled: $autosaveDisabled !== undefined ? $autosaveDisabled : false,
			showCaptionText: $showCaptionText !== undefined ? $showCaptionText : true,
			sidebarRenderer: $sidebarRenderer !== undefined ? $sidebarRenderer : "canvas",
			sidebarStats: $sidebarStats && ["disabled", "limited", "all"].includes($sidebarStats) ? $sidebarStats : "disabled",
			sidebarTime: $sidebarTime && ["disabled", "top", "bottom"].includes($sidebarTime) ? $sidebarTime : "disabled",
			combatControls: $combatControls !== undefined ? $combatControls : "radio",
			targetYourself: $targetYourself !== undefined ? $targetYourself : false,
			scrollRemember: $scroll_remember !== undefined ? $scroll_remember : false,
			mapMovement: $map.movement !== undefined ? $map.movement : true,
			mapLegacy: $map.legacy !== undefined ? $map.legacy : false,
			mapMarkers: $map.markers !== undefined ? $map.markers : false,
			mapTop: $map.top !== undefined ? $map.top : false,
			images: $images !== undefined && StartConfig.enableImages !== false ? $images : 0,
			combatImages: $combatimages !== undefined && StartConfig.enableImages !== false ? $combatimages : 0,
			bodywritingImages: $bodywritingImages !== undefined ? $bodywritingImages : true,
			silhouetteEnabled: $silhouettedisable !== undefined ? $silhouettedisable === "f" : true,
			tanImgEnabled: $skinColor.tanImgEnabled !== undefined ? $skinColor.tanImgEnabled !== "f" : true,
			tanningEnabled: $skinColor.tanningEnabled !== undefined ? $skinColor.tanningEnabled === "f" : true,
			sidebarAnimations: $sidebarAnimations !== undefined ? $sidebarAnimations : true,
			blinkingEnabled: $blinkingdisable !== undefined ? $blinkingdisable === "f" : true,
			combatAnimations: $combatAnimations !== undefined ? $combatAnimations : true,
			halfClosedEnabled: $halfcloseddisable !== undefined ? $halfcloseddisable === "f" : true,
			characterLightEnabled: true,
			lightSpotlight: $lightSpotlight !== undefined ? $lightSpotlight : 0.2,
			lightGradient: $lightGradient !== undefined ? $lightGradient : 0.1,
			lightGlow: $lightGlow !== undefined ? $lightGlow : 0.1,
			lightFlat: $lightFlat !== undefined ? $lightFlat : 0,
			lightCombat: $lightCombat !== undefined ? $lightCombat : 0.2,
			lightTFColor: $lightTFColor !== undefined ? $lightTFColor : 0.2,
			maxStates: $maxStates !== undefined ? $maxStates : 1,
			numpad: $numpad !== undefined ? $numpad : false,
			newWardrobeStyle: $newWardrobeStyle !== undefined ? $newWardrobeStyle : true,
			useNarrowMarket: $useNarrowMarket !== undefined ? $useNarrowMarket : false,
			skipStatisticsConfirmation: $skipStatisticsConfirmation !== undefined ? $skipStatisticsConfirmation : false,
			showDebugRenderer: $showDebugRenderer !== undefined ? $showDebugRenderer : !!StartConfig.debug,
		};>>
	<</if>>

	<!-- v0.3.11.4 creampie.npc.penis and tentacle fix -->
	<!-- IMPORTANT NOTE: please REMOVE this section if these stats come back into use -->
	<<if _version lte 31104>>
		<<run delete $sexStats.creampie.npc.penis>>
		<<run delete $sexStats.creampie.npc.tentacle>>

		<!-- Fixing most named npcs missing all of their virginities -->
		<!-- Resetting all virginities to defaults, keeping virginities already taken by player -->
		<<if $NPCName[$NPCNameList.indexOf("Jordan")].virginity.penile is false>>
			<<for $_i to 0; $_i lt $NPCNameList.length; $_i++>>
				<<set $_takenVirginities to []>>
				<<for $_virginity, $_status range $NPCName[$_i].virginity>>
					<<if $_status is "player">>
						<<set $_takenVirginities.push($_virginity)>>
					<</if>>
				<</for>>
				<<if $NPCNameList[$_i] is "Sydney">>
					<<set $NPCName[$_i].virginity to {"anal": true, "oral": true, "penile": true, "vaginal": true, "handholding": true, "temple": true, "kiss": true}>>
				<<else>>
					<<initNNPCVirginity $_i>>
				<</if>>
				<<set $_takenVirginities.forEach(taken => $NPCName[$_i].virginity[taken] = "player")>>
			<</for>>
		<</if>>

		<!-- Fix for saves where people were able to change wraith's gender -->
		<<if $per_npc.wraith and $per_npc.wraith.pronoun isnot "i">>
			<<set $per_npc.wraith.pronoun to "i">>
			<<generatePronouns $per_npc.wraith>>
		<</if>>
	<</if>>

	<!-- v0.3.11.4 $tirednessmax change to C.tiredness.max -->
	<<if $tirednessmax>>
		<<unset $tirednessmax>>
	<</if>>

	<!-- v0.3.11.4 - Add $makeup.mascara_running -->
	<<if $makeup.mascara_running is undefined>>
		<<set $makeup.mascara_running = 0>>
	<</if>>

	<!-- v0.3.11.4 - Remove defunct vars -->
	<<if $npcdescription isnot undefined>>
		<<unset $npcdescription>>
	<</if>>
	<<if $currentOverlay isnot undefined>>
		<<unset $currentOverlay>>
	<</if>>

	<!-- v0.3.11.4 New pepper spray display -->
	<<if $options.pepperSprayDisplay is undefined>>
		<<set $options.pepperSprayDisplay to "sprays">>
	<</if>>

	<<prison_feat_check>>

	<!-- v0.3.12.1: Changing room refactor -->
	<<if $bus is "girls" or $bus is "boys">>
		<<set $changingRoomGender to $bus>>
	<</if>>

	<!-- v.0.3.12.1 Fix classroom attendance vars -->
	<<if _version lte 31201>>
		<<set $scienceattended to $scienceattended || 0>>
		<<set $mathsattended to $mathsattended || 0>>
		<<set $englishattended to $englishattended || 0>>
		<<set $historyattended to $historyattended || 0>>
		<<set $swimmingattended to $swimmingattended || 0>>
	<</if>>

	<!-- v0.3.12.3 Fix heterochromia -->
	<<if V.custom_eyecolours.findIndex(i => i.variable === "cat_tf_stage_-1_left") !== -1>>
		<!-- if there's objects with a bugged variable -->
		<<script>>
			/* re-create custom eyecolours without broken variables */
			const repairedEyeColours = [];
			V.custom_eyecolours.forEach(c => c.variable.startsWith("cat_tf") || repairedEyeColours.push(c));
			V.custom_eyecolours = repairedEyeColours;
			/* regenerate cat eye stages from "natural" eye colour (selected at game start) while preserving the current colours */
			const lEC = V.leftEyeColour;
			const rEC = V.rightEyeColour;
			V.leftEyeColour = V.eyeselect;
			V.rightEyeColour = V.eyeselect;
			determineCatEyeStages();
			V.leftEyeColour = lEC;
			V.rightEyeColour = rEC;
		<</script>>
	<</if>>

	<<if $parasitepregdisable is undefined>>
		<<set $parasitepregdisable to $analpregdisable>>
		<<unset $analpregdisable>>
	<</if>>

	<!-- v0.3.12.4 -->
	<<if $options.closeButtonMobile is undefined>>
		<<set $options.closeButtonMobile to false>>
	<</if>>

	<!-- v0.3.12.4: Wraith Compound scene/canvasmodel override -->
	<<if $modeloptionsOverride is undefined>>
		<<set $modeloptionsOverride to {}>>
	<</if>>

	<!-- v0.3.12.4: pubfame -->
	<<if $pub_task_stat is undefined>>
		<<set $pub_task_stat to 0>>
	<</if>>

	<!-- v0.3.12.4: semen swallowing framework -->
	<<if $semenswallowedstat is undefined>>
		<<set $semenswallowedstat to 0>>
		<<set $animalsemenswallowedstat to 0>>
	<</if>>

	<<if $options.passageCount is undefined>>
		<<set $options.passageCount to "disabled">>
		<<set $options.playtime to false>>
	<</if>>

	<!-- v0.3.12.4 Sensitivity overhaul changes -->
	<<if $mouthsensitivity is undefined>>
		<!-- Initialise new sensitivities -->
		<<set $mouthsensitivity to 1>>
		<<set $bottomsensitivity to 1>>
		<!-- Map old sensitivity values (1-6) to new range (1-4), with step 0.25 -->
		<<set $breastsensitivity to Math.floor(4 + ($breastsensitivity - 1) * 12 / 5) / 4>>
		<<set $genitalsensitivity to Math.floor(4 + ($genitalsensitivity - 1) * 12 / 5) / 4>>
	<</if>>

	<!-- v0.3.12.4 Wraith update -->
	<<if !$wraith>>
		<<set $wraith to {"state": "", "init": 0}>>
	<<elseif $wraith.init is undefined>>
		<<set $wraith.init to 1>>
		<<set $wraith.days to 0>>
	<</if>>
	<<if $per_npc.wraith>>
		<<if $wraithAnger>>
			<<set $wraithAngerCooldown to $wraithAnger>>
			<<unset $wraithAnger>>
		<</if>>
		<<initnpc "Ivory Wraith">>
		<<run ["pronouns", "pronoun", "gender", "pregnancyAvoidance", "vagina", "penis", "clothes", "chest", "skincolour", "breastsize", "breastsdesc", "breastdesc", "penisdesc", "penissize", "trust", "type"].forEach(s => C.npc["Ivory Wraith"][s] = clone($per_npc.wraith[s]))>>
		<<set C.npc["Ivory Wraith"].lust to 0>>
		<<if $wraith.state is "haunt">>
			<<set C.npc["Ivory Wraith"].lust to 20>>
			<<if ($wraithPrison and $wraithPrison.vision) or Object.keys(V.feats.currentSave).includes("Schism")>>
				<<set $wraithPrison.vision to true>>
				<<set C.npc["Ivory Wraith"].lust -= 5>>
			<</if>>
		<</if>>
		<<if $wraithAngerCooldown>>
			<<set C.npc["Ivory Wraith"].lust += 3>>
		<</if>>
		<<set C.npc["Ivory Wraith"].lust = Math.clamp(C.npc["Ivory Wraith"].lust, 0, 20)>>
		<<clearNPC "wraith">>
		<<if $NPC_names_m.includes("Ivory Wraith") or $NPC_names_f.includes("Ivory Wraith")>>
			<<run delete $NPC_names_m["Ivory Wraith"]>>
			<<run delete $NPC_names_f["Ivory Wraith"]>>
		<</if>>
		<<if $wraith.state and !$wraith.days>>
			<<set $wraith.days to ($days - 60)>>
		<</if>>
	<</if>>

	<!-- To update the player and named npc pregnancy objects from numbers to a single array -->
	<<if $sexStats.vagina.pregnancy.fetus is undefined or $sexStats.anus.pregnancy.fetus is undefined or $sexStats.anus.pregnancy.type is undefined or $sexStats.anus.pregnancy.nonCycleRng is undefined or !Array.isArray($sexStats.vagina.sperm) or !$parentList>>
		<<physicalAdjustmentsInit>>
	<</if>>

	<<if !$pregnancytype>>
		<<set $cycledisable to "f">>
		<<set $pregnancytype to "realistic">>
	<</if>>

	<<if $adultshopunlocked and $adultshopcontribution>>
		<<earnFeat "Opened Pandoras Box">>
		<<if $adultshopcontribution gte 11>>
			<<earnFeat "Opened Pandoras Cocks">>
		<</if>>
	<</if>>

	<<if $baseVaginalPregnancyChance>>
		<<set $basePlayerPregnancyChance to $baseVaginalPregnancyChance>>
		<<unset $baseVaginalPregnancyChance>>
	<</if>>

	<<if $insecurity_pregnancy is undefined>>
		<<set $insecurity_pregnancy to 0>>
		<<set $acceptance_pregnancy to 0>>
	<</if>>

	/* For saves where it was set to undefined */
	<<if $sciencemissed is undefined>>
		<<set $sciencemissed to 0>>
		<<set $mathsmissed to 0>>
		<<set $englishmissed to 0>>
		<<set $historymissed to 0>>
		<<set $swimmingmissed to 0>>
	<</if>>
	/* To correct some bad math that let it get into the negatives */
	<<if Math.min($sciencemissed,$mathsmissed,$englishmissed,$historymissed,$swimmingmissed) lt 0>>
		<<set $_min to Math.min($sciencemissed,$mathsmissed,$englishmissed,$historymissed,$swimmingmissed)>>
		<<set $sciencemissed -= $_min>>
		<<set $mathsmissed -= $_min>>
		<<set $englishmissed -= $_min>>
		<<set $historymissed -= $_min>>
		<<set $swimmingmissed -= $_min>>
	<</if>>
	/* Attempt to sync up individual lessons missed with $lessonmissed */
	<<set $_totalMissed to $sciencemissed + $mathsmissed + $englishmissed + $historymissed + $swimmingmissed>>
	<<if $_totalMissed gt $lessonmissed>>
		<<set $lessonmissed to $_totalMissed>>
	<<elseif $_totalMissed lt $lessonmissed>>
		<<set $_totalToAdd to $lessonmissed - $_totalMissed>>
		<<set $_toAdd to Math.ceil($_totalToAdd / 5)>>
		<<if $_totalToAdd gt 0>>
			<<set $sciencemissed += $_toAdd lt $_totalToAdd ? $_toAdd : $_totalToAdd>>
			<<set $_totalToAdd -= $_toAdd lt $_totalToAdd ? $_toAdd : $_totalToAdd>>
		<</if>>
		<<if $_totalToAdd gt 0>>
			<<set $mathsmissed += $_toAdd lt $_totalToAdd ? $_toAdd : $_totalToAdd>>
			<<set $_totalToAdd -= $_toAdd lt $_totalToAdd ? $_toAdd : $_totalToAdd>>
		<</if>>
		<<if $_totalToAdd gt 0>>
			<<set $englishmissed += $_toAdd lt $_totalToAdd ? $_toAdd : $_totalToAdd>>
			<<set $_totalToAdd -= $_toAdd lt $_totalToAdd ? $_toAdd : $_totalToAdd>>
		<</if>>
		<<if $_totalToAdd gt 0>>
			<<set $historymissed += $_toAdd lt $_totalToAdd ? $_toAdd : $_totalToAdd>>
			<<set $_totalToAdd -= $_toAdd lt $_totalToAdd ? $_toAdd : $_totalToAdd>>
		<</if>>
		<<if $_totalToAdd gt 0>>
			<<set $swimmingmissed += $_totalToAdd>>
		<</if>>
	<</if>>

	<<if $wolfstate is "hunt" and $huntstate isnot "success">><<set $huntstate to "ongoing">><</if>>
<</widget>>

<<widget "backComp">>

	<!-- v0.3.12.4 $daily object -->
	<<run dailyConvert()>>

	<<if _version lte 30408>>/* DO NOT INCREMENT */
	/* 0.3.4.8 is the last version that should need the old vvu */
	/* for versions <= 0.3.4.8, run old version handler */
		<<variablesVersionUpdate>>
	<</if>>
	<<if $saveVersions.last() isnot StartConfig.version>>
		<<set $saveVersions.push(StartConfig.version)>>
	<</if>>
	/* * * * * * * * * * * * * * * * * * * * * * *
	* new backwards compatibility code goes here
	*/

	/* Code that should not be moved into a check like above */
	<<set $runWardrobeSanityChecker to true>>

	<<if $objectVersion.updateClothes lt 41 or $objectVersion.updateClothes is undefined>>
		<<updateClothes>>
		<<if $objectVersion.updateClothes lt 38>>
			<!-- V0.4.0.7 return items stuck in $store without proper .location -->
			<<run for (const slot in V.store) V.store[slot].forEach(i => { if (i.location === 0) i.location = "getBack" })>>
			<<storeon "getBack" "return">>
		<</if>>
		<<if $objectVersion.updateClothes lt 40>>
			<!--Should'nt need to re-run that often-->
			<<run clothesDataTrimmerLoop()>>
		<</if>>
		<<set $objectVersion.updateClothes to 41>>
		<!--If you have added any `colour_combat` or `accessory_colour_combat` to clothes that need their `colour` or `accessory_colour`, this will clear them.
		Remove `colour_combat` or `accessory_colour_combat` where this is the case, they are independant so `colour_combat` will only clear `colour`-->
	<</if>>

	<<if $objectVersion.specialClothes lt 14 or $objectVersion.specialClothes is undefined>>
		<<specialClothesSetup>>
		<<specialClothesUpdate>>
		<<set $objectVersion.specialClothes to 14>>
	<</if>>

	<<if $objectVersion.museumAntiques lte 14 and $museumAntiques.antiques.antiquewhitescrystal isnot undefined>>
		<<run delete $museumAntiques.antiques.antiquewhitescrystal>>
	<</if>>
	<<if $objectVersion.museumAntiques lt 16 or $objectVersion.museumAntiques is undefined>>
		/*Moved undefined checks for new antiques to the widget below*/
		<<updateMuseumAntiques>>
		<<set $objectVersion.museumAntiques to 15>>
	<</if>>

	<<pregnancyVar>>

	<<updateNewNamedNpcs>>

	<!-- Jimmy: Reset NPC slots if necessary by checking .type === 0
			Old versions prior to 3.4.* did not have empty slots properly set to baseNPC. -->
	<<for $_i = 0; $_i < $NPCList.length; $_i++>>
		<<if $combat isnot 1>>
			<<if $NPCList[$_i].type is 0>>
				<<set $NPCList[$_i] to clone(setup.baseNPC)>>
			<</if>>
		<<elseif $NPCList[$_i].active is "active">>
			<<set $NPCList[$_i].type to (typeof $NPCList[$_i].type isnot "string" ? "human" : $NPCList[$_i].type)>>
		<</if>>
	<</for>>

	<!-- Jimmy: Run updater for EventSystem.
				Only runs if behind on schema, and if $event exists. -->
	<<run EventSystem.update()>>

	<!-- v0.3.6.2: Updating NPC clothing when needed -->
	<<if $objectVersion.npcClothes lt 1 or $objectVersion.npcClothes is undefined>>
		<<set $objectVersion.npcClothes to 1>>
		<<if $halloween is 1 and $robinmissing is 0 and $hour gte 16 and $hour lt 19 and $monthday is 31 and $halloween_robin_costume and $NPCName[$NPCNameList.indexOf("Robin")].init is 1>>
			<<if !$NPCName[$NPCNameList.indexOf("Robin")].outfits>>
				<<initNNPCClothes "Robin">>
			<</if>>
			<<if !$NPCName[$NPCNameList.indexOf("Robin")].outfits.includes($halloween_robin_costume)>>
				<<addNNPCOutfit "Robin" $halloween_robin_costume>>
			<</if>>
		<</if>>
		<<if $NPCName[$NPCNameList.indexOf("Kylar")].state is "prison">>
			<<if !$NPCName[$NPCNameList.indexOf("Kylar")].outfits>>
				<<initNNPCClothes "Kylar">>
			<</if>>
			<<if !$NPCName[$NPCNameList.indexOf("Kylar")].outfits.includes("prisonJumpsuit")>>
				<<addNNPCOutfit "Kylar" "prisonJumpsuit">>
			<</if>>
		<</if>>
		<!-- Bestow clothing to any active NPCs-->
		<<if $NPCList isnot undefined and !$NPCList[0].clothes>>
			<<for _i = 0; _i < $NPCList.length; _i++>>
				<<if $NPCList[_i].type>>
					<<if $NPCList[_i].type is "human">>
						<<npcClothesType $NPCList[_i] "default">>
					<<else>>
						<<npcClothesType $NPCList[_i] "naked">>
					<</if>>
				<</if>>
			<</for>>
		<</if>>
		<<for $_key, $_npc range $per_npc>>
			<<if $_npc>>
				<!-- Bestow clothing to persistent NPCs-->
				<<if !$_npc.clothes>>
					<<if ["anxious_guard", "methodical_guard", "relaxed_guard", "veteran_guard"].includes($_key)>>
						<<npcClothesType $per_npc[$_key] "security">>
					<<elseif ["scarred_inmate", "tattooed_inmate"].includes($_key)>>
						<<npcClothesType $per_npc[$_key] "prison">>
					<<elseif ["tower_creature"].includes($_key)>>
						<<npcClothesType $per_npc[$_key] "naked">>
					<<elseif ["farm_tower_guard"].includes($_key)>>
						<<npcClothesName $per_npc[$_key] "wildsFlannel">>
					<<elseif ["prison_intro_officer"].includes($_key)>>
						<<npcClothesType $per_npc[$_key] "police">>
					<<elseif ["pinch"].includes($_key)>>
						<<npcClothesType $per_npc[$_key] "robinGiftChristmas">>
					<<elseif ["wraith"].includes($_key)>>
						<<npcClothesType $per_npc[$_key] "Wraith">>
					<<else>>
						<<npcClothesType $per_npc[$_key] "default">>
					<</if>>
				<</if>>
			<</if>>
		<</for>>
	<</if>>

	<!-- v0.3.8.2: fix for cursed clothing being present in the player's wardrobes -->
	<<if Object.keys($wardrobe).some(slot => Object.values($wardrobe[slot]).some(clothing => clothing.cursed))>>
		<<run Object.keys($wardrobe).forEach(slot => {
			if (slot is "space") return;
			$wardrobe[slot] = $wardrobe[slot].filter(clothing => clothing.cursed is 0);
		})>>
		<<run Object.keys($wardrobes).forEach(location =>{
			if (location is "shopReturn" || location is "wardrobe") return;
			Object.keys($wardrobes[location]).forEach(slot => {
				if (["isolated", "name", "shopSend", "space", "transfer", "unlocked"].includes(slot)) return;
				$wardrobes[location][slot] = $wardrobes[location][slot].filter(clothing => clothing.cursed === 0);
			})
		})>>
	<</if>>

	<<npcPregnancyUpdater>><!--Has checks to make sure it only changes data when required, don't block behind a check-->

	<<if _version lt 40000>>/* DO NOT INCREMENT */
		/* 0.4.0.0 is the last version that should need the old vvu */
		/* for versions <= 0.4.0.0, run old version handler */
		<<variablesVersionUpdate2>>
	<</if>>

	/* End of Code that should not be moved */

	<!-- v0.3.6.2: cow update - ToDo: Move to variables-static -->
	<<set $BeastList to ["dog","cat","pig","wolf","dolphin","lizard","bear","boar","creature","horse","fox","hawk","cow","spider"]>>

	<!-- Will navigate to V.makeup.eyelenses, and attempt to turn that into the proper object this time. Needs configing if it can be moved to `variablesVersionUpdate2`-->
	<<run restructureEyeColourVariable()>>

	<!-- v0.3.8.6: furniture update -->
	<<run Furniture.update(true)>>

	<!-- v0.3.8.6: Sydney Rite of Promise protects PC's angel TF -->
	<!-- !! Readjust after marriage is added !! -->
	<<if $templePromised isnot "" and $player.virginity.vaginal is true and $player.virginity.penile is true>>
		<<set $virginityProtected to true>>
	<</if>>

	<!-- <= v0.3.8.6: fame object -->
	<<if !$objectVersion.fame>>
		<<if typeof $fame isnot "object">>
			<<set $fame to {
				exhibitionism: $fameexhibitionism,
				prostitution: $fameprostitution,
				bestiality: $famebestiality,
				sex: $famesex,
				rape: $famerape,
				good: $famegood,
				business: $famebusiness,
				scrap: $famescrap,
				pimp: $famepimp,
				social: $famesocial,
				model: $famemodel,
				pregnancy: $famepregnancy
			}>>
			<<if $statFreeze and !$frozenValues>> <!-- For scenes like Janet and Raul, Pinch, or the Schism -->
				<<set $real_fame to {
					exhibitionism: $real_fameexhibitionism,
					prostitution: $fameprostitution,
					bestiality: $famebestiality,
					sex: $real_famesex,
					rape: $real_famerape,
					good: $famegood,
					business: $famebusiness,
					scrap: $real_famescrap,
					pimp: $famepimp,
					social: $famesocial,
					model: $famemodel,
					pregnancy: $famepregnancy
				}>>
			<</if>>
			<<unset $fameexhibitionism>>
			<<unset $fameprostitution>>
			<<unset $famebestiality>>
			<<unset $famesex>>
			<<unset $famerape>>
			<<unset $famegood>>
			<<unset $famebusiness>>
			<<unset $famescrap>>
			<<unset $famepimp>>
			<<unset $famesocial>>
			<<unset $famemodel>>
			<<unset $famepregnancy>>
			<<unset $real_fameexhibitionism>>
			<<unset $real_famesex>>
			<<unset $real_famerape>>
			<<unset $real_famescrap>>

			<<if $park_fame is undefined>>
				<<set $park_fame to $famepark>>
				<<unset $famepark>>
			<</if>>
		<</if>>
		<<set $objectVersion.fame to 1>>
	<</if>>
	<!-- This patch makes sure certain properties exist in $fame. Defaults to 0. -->
	<<if $objectVersion.fame is 1>>
		<<set $_keys to [
			'exhibitionism', 'prostitution', 'bestiality', 'sex', 'rape',
			'good', 'business', 'scrap', 'pimp', 'social', 'model', 'pregnancy'
		]>>
		<<for $_key range $_keys>>
			<<if $fame[$_key] eq null>>
				<<set $fame[$_key] to 0>>
			<</if>>
		<</for>>
		<<set $objectVersion.fame to 2>>
	<</if>>
	<!-- This patch checks existing properties of $fame for non-numeric values, and assigns them a default of 0. -->
	<<if $objectVersion.fame is 2>>
		<<for $_key, $_val range $fame>>
			<<if typeof $_val isnot 'number' or $_val is NaN>>
				<<set $fame[$_key] to 0>>
			<</if>>
		<</for>>
		<<set $objectVersion.fame to 3>>
	<</if>>

	<!-- <= v0.3.8.6: Modeling rework -->
	<<if typeof $photo is 'object'>>
		<<script>>
			const photo = V.photo;
			const versions = V.objectVersion;
			if (versions.photo === undefined) {
				versions.photo = 0;
			}
			switch (versions.photo) {
				case 0:
					if (typeof photo.fame_stage === 'number') {
						photo.audienceSize = Math.ceil(photo.fame_stage / 2);
						photo.timesWithThisAudienceSize = ((photo.fame_stage - 1) % 2) + 1;
					} else {
						photo.audienceSize = 1;
						photo.timesWithThisAudienceSize = 0;
					}
					delete photo.fame_stage;
					if (typeof photo.money !== 'number' || Number.isNaN(photo.money)) {
						photo.money = 450;
					}
					versions.photo = 1;
			}
		<</script>>
	<</if>>

	<!-- v0.3.13.0 Persistent NPCs stealing the Wraith's name -->
	<<if $NPC_names_m.includes("Ivory Wraith") or $NPC_names_f.includes("Ivory Wraith")>>
		<<set $NPC_names_m.delete("Ivory Wraith")>>
		<<set $NPC_names_f.delete("Ivory Wraith")>>
	<</if>>

	<<if Object.values($per_npc).some(npc => npc.name is "Ivory Wraith")>>
		<<for _i, _npc range $per_npc>>
			<<if $per_npc[_i].name is "Ivory Wraith">> <<set $per_npc[_i].name to ($per_npc[_i].pronoun is "m" ? $NPC_names_m.pluck() : $NPC_names_f.pluck())>> <</if>>
		<</for>>
	<</if>>

	<!-- v0.3.13.0 Fixed Landry forgetting about Mickey -->
	<<if $police_hack gte 4>>
		<<set $mickeyPub to 2>>
	<</if>>

	<!-- v0.3.13.3 Schism unset fix -->
	<<if $schism>>
		<<unset $schism>>
	<</if>>

	<!-- v0.3.13.5 -->
	<<if $zoom isnot undefined>>
		<<set $options.zoom to $zoom>>
		<<unset $zoom>>
	<</if>>

	<<if $options.zoom is undefined>>
		<<set $options.zoom to 100>>
	<</if>>

	<<if $numberify_enabled isnot undefined>>
		<<set $options.numberify_enabled to $numberify_enabled>>
		<<unset $numberify_enabled>>
	<</if>>

	<<if $options.numberify_enabled is undefined>>
		<<set $options.numberify_enabled to 1>>
	<</if>>

	<<if $timestyle isnot undefined>>
		<<set $options.timestyle to $timestyle>>
		<<unset $timestyle>>
	<</if>>

	<<if $options.timestyle is undefined>>
		<<set $options.timestyle to "military">>
	<</if>>

	<<if $oldclock isnot undefined>>
		<<set $options.oldclock to $oldclock>>
		<<unset $oldclock>>
	<</if>>

	<!-- v0.3.13.5 Impreg fame in fame object -->
	<<if $fame.impreg is undefined>>
		<<set $fame.impreg to 0>>
	<</if>>
	<!-- v0.3.13.5 Condom sidebar display -->
	<<if $options.condomsDisplay is undefined>>
		<<set $options.condomsDisplay to "standard">>
		<<set $options.traitOverlayFormat to "table">>
	<</if>>

	<!-- v0.3.13.5 Deprecated Code and Bodysize Fix -->
	<<if !$bodysize>>
		<<switch $physiquesize>>
			<<case 6000>><<set $bodysize to 0>>
			<<case 10000>><<set $bodysize to 1>>
			<<case 12000>><<set $bodysize to 2>>
			<<case 16000>><<set $bodysize to 3>>
			<<default>><<set $bodysize to 2>><<set $physiquesize to 12000>>
		<</switch>>
	<</if>>

	<!-- v0.3.13.5 undefined fringe colour -->
	<<if $hairfringecolour is undefined>>
		<<set $hairfringecolour to $haircolour>>
	<</if>>

	<!-- v0.3.13.5 Nightmares ruining angel TF -->
	<<if $activeNightmare and $real_transformationParts is undefined>>
		<<set $real_angel to $angel>>
		<<set $real_angelbuild to $angelbuild>>
		<<set $real_fallenangel to $fallenangel>>
		<<set $real_transformationParts to clone($transformationParts)>>
		<<set $real_purity to $purity>>
	<</if>>

	<!-- v0.3.13.5 Pregnancy Utilities -->
	<<if $storedNPCs is undefined>>
		<!-- Separated object for compressing NPCs -->
		<<set $storedNPCs to {}>>
		<!-- Timer for events at the nursery -->
		<<if $home_event_ward_timer is undefined>>
			<<set $home_event_ward_timer to 3>>
			<<set $home_event_ward_timer to 0>>
		<</if>>
		<!-- Default condom setting -->
		<<if $condomLvl is undefined>>
			<<set $condomLvl to 3>>
		<</if>>
		<!-- Condom object for when more condom types are implemented -->
		<<if $player.inventory and !$player.inventory.condoms>>
			<<set $player.inventory.condoms to {}>>
		<</if>>
		<!-- Clears unused values, establishes debug values -->
		<<if $condomchance>>
			<<set $condomChance to 60>>
			<<set $condomUseChanceRape to 33>>
			<<set $condomUseChanceCon to 83>>
			<<unset $condomchance>>
			<<unset $condomautochance>>
		<</if>>
		<!-- Old testing variable I forgot to clear -->
		<<unset $test>>
	<</if>>

	<!-- v0.3.13.5 Save compression -->
	<<if $compressSave is undefined>>
		<<set $compressSave to true>>
	<</if>>

	<!-- v0.3.13.5 Two-tone hair -->
	<<if $hairColourStyle is undefined>>
		<<set $hairColourStyle to "simple">>
		<<set $hairColourGradient to { style: "split", colours: ["red", "black"]}>>
	<</if>>
	<<if $hairFringeColourStyle is undefined>>
		<<set $hairFringeColourStyle to "simple">>
		<<set $hairFringeColourGradient to { style: "split", colours: ["red", "black"]}>>
	<</if>>

	<!-- v0.3.13.5 Whitney rescued state removal and pillory state addition -->
	<<if C.npc.Whitney.state is "rescued">>
		<<set $whitneyrescued to true>>
		<<set C.npc.Whitney.state to "active">>
	<</if>>
	<<if $pillory_tenant.special.name is "Whitney" and C.npc.Whitney.state isnot "pillory">>
		<!-- Making "pillory" a state means that whitney's state shouldn't be anything but "pillory" when they're locked up -->
		<<set C.npc.Whitney.state to "pillory">>
	<</if>>


	<!-- v0.3.13.5 NPC Skin simplification -->
	<<if $whitechance>>
		<<unset $whitechance>>
		<<unset $whitechanceselector>>
		<<unset $blackchanceselector>>
		<<for $_i to 0; $_i lt $NPCNameList.length; $_i++>>
			<<if $NPCName[$_i].init is 1 and !$NPCName[$_i].skincolour>>
				<<if random(1, 100) lte $blackchance>>
					<<set $NPCName[$_i].skincolour to "black">>
				<<else>>
					<<set $NPCName[$_i].skincolour to "white">>
				<</if>>
			<</if>>
		<</for>>
		<<if C.npc["Ivory Wraith"].init is 1>>
			<<set C.npc["Ivory Wraith"].skincolour to "ghost">>
		<</if>>
		<<for $_s to 0; $_s lt $NPCList.length; $_s++>>
			<<if $NPCList[$_s].health and !$NPCList[$_s].skincolour>>
				<<if $NPCList[$_s].fullDescription is $npc[$_s]>>
					<<set $NPCList[$_s].skincolour to C.npc[$npc[$_s]].skincolour>>
				<<else>>
					<<if random(1, 100) lte $blackchance>>
						<<set $NPCList[$_s].skincolour to "black">>
					<<else>>
						<<set $NPCList[$_s].skincolour to "white">>
					<</if>>
				<</if>>
			<</if>>
		<</for>>
	<</if>>

	<!-- v0.3.13.5 disable old renderer settings -->
	<<if $options.sidebarRenderer is "both" or $options.sidebarRenderer is 'img'>>
		<<set $options.sidebarRenderer to 'canvas'>>
	<</if>>

	<!-- v0.3.13.5 English play event and some passage renames-->
	<<if $englishPlay is undefined>>
		<<set $englishPlay to "none">>
	<</if>>

	<!-- v0.3.13.5 disable combat animations on mobile due to system breakdown.-->
	<!-- ToDo: Canvas, revert in future update when combat is updated to canvas renderer -->
	<<if Browser.isMobile.any() and $options.combatAnimations is true and $combatFix is undefined>>
		<<set $combatFix to 1>>
		<<set $options.combatAnimations to false>>
	<</if>>

	<<if $debugdisable is undefined>>
		<<set $options.debugdisable to $debugdisable>>
		<<unset $debugdisable>>
	<</if>>

	<<if $masturbationtimestat isnot undefined>>
		<<if !$secondsSpentMasturbating>>
			<<set $secondsSpentMasturbating to $masturbationtimestat * 60>>
		<</if>>
		<<unset $masturbationtimestat>>
	<</if>>
	<<if $prison_scarred_done isnot undefined>>
		<<unset $prison_scarred_done>>
		<<set $daily.prison.scarredDone to true>>
	<</if>>
	<<if $prison_relaxed_spoke isnot undefined>>
		<<unset $prison_relaxed_spoke>>
		<<set $daily.prison.relaxedSpoke to true>>
	<</if>>
	<<if $prison_relaxed_greet isnot undefined>>
		<<unset $prison_relaxed_greet>>
		<<set $daily.prison.relaxedGreet to true>>
	<</if>>
	<<if $prison_anxious_spoke isnot undefined>>
		<<unset $prison_anxious_spoke>>
		<<set $daily.prison.anxiousSpoke to true>>
	<</if>>
	<<if $prison_anxious_greet isnot undefined>>
		<<unset $prison_anxious_greet>>
		<<set $daily.prison.anxiousGreet to true>>
	<</if>>
	<<if $prison_veteran_spoke isnot undefined>>
		<<unset $prison_veteran_spoke>>
	<</if>>
	<<if $prison_veteran_greet isnot undefined>>
		<<unset $prison_veteran_greet>>
		<<set $daily.prison.veteranGreet to true>>
	<</if>>
	<<if $prison_methodical_spoke isnot undefined>>
		<<unset $prison_methodical_spoke>>
		<<set $daily.prison.methodicalSpoke to true>>
	<</if>>
	<<if $prisonwake isnot undefined>>
		<<unset $prisonwake>>
		<<set $daily.prison.wake to true>>
	<</if>>
	<<if $prison_attention_day isnot undefined>>
		<<unset $prison_attention_day>>
		<<set $daily.prison.attentionDay to true>>
	<</if>>
	<<if $glideScared isnot undefined>>
		<<unset $glideScared>>
		<<set $daily.glideScared to true>>
	<</if>>
	<<if !$daily.school.attended>>
		<<set $daily.school.attended to {}>>
	<</if>>
	<<if $scienceattended isnot undefined>>
		<<set $daily.school.attended.science to $scienceattended == 1>>
		<<unset $scienceattended>>
		<<set $daily.school.attended.maths to $mathsattended == 1>>
		<<unset $mathsattended>>
		<<set $daily.school.attended.english to $englishattended == 1>>
		<<unset $englishattended>>
		<<set $daily.school.attended.history to $historyattended == 1>>
		<<unset $historyattended>>
		<<set $daily.school.attended.swimming to $swimmingattended == 1>>
		<<unset $swimmingattended>>
	<</if>>
	<<if $weekly is undefined>>
		<<set $weekly to { theft: {}, sewers: {} }>>
	<</if>>
	<<if $robinBrothelWeekly isnot undefined>>
		<<set $weekly.robinBrothel to $robinBrothelWeekly>>
		<<unset $robinBrothelWeekly>>
	<</if>>
	<<if $edenPreyWeekly isnot undefined>>
		<<set $weekly.edenPrey to $edenPreyWeekly>>
		<<unset $edenPreyWeekly>>
	<</if>>
	<<if $leightondancerefused isnot undefined>>
		<<set $weekly.leightonDanceRefused to $leightondancerefused>>
		<<unset $leightondancerefused>>
	<</if>>
	<<if $dancestudiotheft isnot undefined>>
		<<set $weekly.theft.danceStudio to $dancestudiotheft>>
		<<unset $dancestudiotheft>>
	<</if>>
	<<if $oceanbreezetheft isnot undefined>>
		<<set $weekly.theft.oceanBreeze to $oceanbreezetheft>>
		<<unset $oceanbreezetheft>>
	<</if>>
	<<if $stripclubtheft isnot undefined>>
		<<set $weekly.theft.stripClub to $stripclubtheft>>
		<<unset $stripclubtheft>>
	<</if>>
	<<if $clothingshoptheft isnot undefined>>
		<<set $weekly.theft.clothingShop to $clothingshoptheft>>
		<<unset $clothingshoptheft>>
	<</if>>
	<<if $adultshoptheft isnot undefined>>
		<<set $weekly.theft.adultShop to $adultshoptheft>>
		<<unset $adultshoptheft>>
	<</if>>
	<<if $hairdresserstheft isnot undefined>>
		<<set $weekly.theft.hairDressers to $hairdresserstheft>>
		<<unset $hairdresserstheft>>
	<</if>>
	<<if $tailortheft isnot undefined>>
		<<set $weekly.theft.tailor to $tailortheft>>
		<<unset $tailortheft>>
	<</if>>
	<<if $petshoptheft isnot undefined>>
		<<set $weekly.theft.petShop to $petshoptheft>>
		<<unset $petshoptheft>>
	<</if>>
	<<if $toyshoptheft isnot undefined>>
		<<set $weekly.theft.toyShop to $toyshoptheft>>
		<<unset $toyshoptheft>>
	<</if>>
	<<if $tattooparlourtheft isnot undefined>>
		<<set $weekly.theft.tattooParlour to $tattooparlourtheft>>
		<<unset $tattooparlourtheft>>
	<</if>>
	<<if $ridingschooltheft isnot undefined>>
		<<set $weekly.theft.ridingSchool to $ridingschooltheft>>
		<<unset $ridingschooltheft>>
	<</if>>
	<<if $spatheft isnot undefined>>
		<<set $weekly.theft.spa to $spatheft>>
		<<unset $spatheft>>
	<</if>>
	<<if $schoollibrarymoneytheft isnot undefined>>
		<<set $weekly.theft.schoolLibraryMoney to $schoollibrarymoneytheft>>
		<<unset $schoollibrarymoneytheft>>
	<</if>>
	<<if $infirmarydrugstheft isnot undefined>>
		<<set $weekly.theft.infirmaryDrugs to $infirmarydrugstheft>>
		<<unset $infirmarydrugstheft>>
	<</if>>
	<<if $furnitureshoptheft isnot undefined>>
		<<set $weekly.theft.furnitureShop to $furnitureshoptheft>>
		<<unset $furnitureshoptheft>>
	<</if>>
	<<if $streetpolice isnot undefined>>
		<<set $weekly.streetPolice to $streetpolice>>
		<<unset $streetpolice>>
	<</if>>
	<<if $sewersantiquecrystal isnot undefined>>
		<<set $weekly.sewers.antiqueCrystal to $sewersantiquecrystal>>
		<<unset $sewersantiquecrystal>>
	<</if>>
	<<if $sewersantiquewatch isnot undefined>>
		<<set $weekly.sewers.antiqueWatch to $sewersantiquewatch>>
		<<unset $sewersantiquewatch>>
	<</if>>
	<<if $sewersantiquedildo isnot undefined>>
		<<set $weekly.sewers.antiqueDildo to $sewersantiquedildo>>
		<<unset $sewersantiquedildo>>
	<</if>>
	<<if $sewersantiquecandlestick isnot undefined>>
		<<set $weekly.sewers.antiqueCandlestick to $sewersantiquecandlestick>>
		<<unset $sewersantiquecandlestick>>
	<</if>>
	<<if $sewersantiquehorn isnot undefined>>
		<<set $weekly.sewers.antiqueHorn to $sewersantiquehorn>>
		<<unset $sewersantiquehorn>>
	<</if>>
	<<if $temple_fire isnot undefined>>
		<<set $weekly.templeFire to $temple_fire>>
		<<unset $temple_fire>>
	<</if>>
	<<if $police_high isnot undefined>>
		<<set $weekly.policeHigh to $police_high>>
		<<unset $police_high>>
	<</if>>
	<<if $school_pool_swap isnot undefined>>
		<<set $weekly.schoolPoolSwap to $school_pool_swap>>
		<<unset $school_pool_swap>>
	<</if>>
	<<if $beach_cave_compass isnot undefined>>
		<<set $weekly.beachCaveCompass to $beach_cave_compass>>
		<<unset $beach_cave_compass>>
	<</if>>
	<<if $dance_job isnot undefined>>
		<<set $weekly.danceJob to $dance_job>>
		<<unset $dance_job>>
	<</if>>
	<<if $whitneyPub isnot undefined>>
		<<set $weekly.whitneyPub to $whitneyPub>>
		<<unset $whitneyPub>>
	<</if>>
	<<if $adultShopWhitney isnot undefined>>
		<<set $weekly.adultShopWhitney to $adultShopWhitney>>
		<<unset $adultShopWhitney>>
	<</if>>

	<!--
	v0.4.0.6 change (87f8e633085bb4be8f4f0d099012b1e0b077242a) that I've moved up here.
	the reason is - this variable is used in the edge-case handled below
	  (the <<pass _passMinutes>> macro that the v0.4 Time refactor sometimes calls ends up reading schoolLessonsMissed.science,
	  which obviously breaks if this initialization doesn't happen at this point.

	If you add any calls to <<pass>> before this line in backComp - it will also break
	  for any players whose save doesn't have the schoolLessonsMissed paramm yet.
	-->
	<<if $sciencemissed isnot undefined>>
		<<set $schoolLessonsMissed to { science: $sciencemissed, maths: $mathsmissed, english: $englishmissed, history: $historymissed, swimming: $swimmingmissed }>>
		<<unset $sciencemissed>>
		<<unset $mathsmissed>>
		<<unset $englishmissed>>
		<<unset $historymissed>>
		<<unset $swimmingmissed>>
	<</if>>


	<!-- v0.4 Time refactor -->
	<<if $time isnot undefined and !$timeStamp>>
		<<script>>
			/* Tries to set the date to the same as the previous version's date.
			If weekday is different from the real date, well shit, we're faking it. */
			const month = Time.monthNames.map(month => month.toLowerCase()).indexOf(V.month) + 1;
			const date = new DateTime(V.year, month, V.monthday, Math.min(V.hour, 23), Math.min(V.minute, 59), V.seconds);
			const startDate = new DateTime(date);
			T.passMinutes = (V.hour > 23 ? (V.hour - 23) * 60 : 0) + (V.minute > 59 ? V.minute - 59 : 0);
			if (V.real_season) V.real_timeStamp = new DateTime(V.real_year, V.real_month, V.real_monthday, V.real_hour, V.real_minute).timeStamp;
			Time.startDate = startDate.addDays(-V.days);
			Time.setDate(date);
			V.weekDayOffset = (V.weekday - Time.weekDay + 6) % 7; /* stay positive */
			if (V.weekDayOffset === 6) delete V.weekDayOffset; /* and clean the rubbish */
			["time", "year", "yeardays", "season", "month", "monthday", "weekday", "schoolday", "days", "daystate", "dayname", "hour", "minute", "seconds", "pass", "real_year", "real_season", "real_month", "real_monthday", "real_hour", "real_minute", "real_time"].forEach(v => delete V[v]);
		<</script>>
		<<pass _passMinutes>>
	<</if>>

	<!-- v0.4 Vrel stuff that he forgot to label -->
	<<if $hypnosisdisable is undefined>>
		<<set $hypnosisdisable to "f">>
	<</if>>
	<<if $housekeeping is undefined>>
		<<set $housekeeping to 0>>
	<</if>>
	<<if $town_projects is undefined>>
		<<set $town_projects to {}>>
	<</if>>
	<<if $ruffledisable is undefined>>
		<<set $ruffledisable to "f">>
	<</if>>
	<<if $child_played is undefined>>
		<<set $child_played to []>>
	<</if>>

	<!-- v0.4 Wraith stuff -->
	<<if $necklaceThief is undefined>>
		<<if $museumAntiques.antiques.antiqueivorynecklace isnot "notFound">>
			<<set $necklaceThief to "player">>
		<<elseif $town_projects.diving gte 3 and $museumAntiques.antiques.antiqueivorynecklace is "notFound">>
			/* for anyone on the dev build that passed the normal trigger already */
			<<museumAntiqueStatus "antiqueivorynecklace" "found">>
			<<museumAntiqueStatus "antiqueivorynecklace" "talk">>
			<<set $necklaceThief to "diver">>
		<<else>>
			<<set $necklaceThief to "">>
		<</if>>
	<</if>>

	<!-- v0.4 Fox TF and fox encounters -->
	<<if $fox is undefined or typeof $fox is "string">>
		<<set $foxbuild to 0>>
		<<set $fox to 0>>
		<<set $transformationParts.traits.mateForLife to ($harpy gte 3 ? "default" : "disabled")>>

		<!-- Unrelated fix for fallenbuild being NaN on existing saves -->
		<<if !$fallenbuild>>
			<<set $fallenbuild to 0>>
		<</if>>
	<</if>>

	<!-- V0.4 Moving flaunting to mirror -->
	<<if $uncomfortable.flaunting isnot undefined>>
		<<if $uncomfortable.flaunting is false and $demon gte 4 and $exhibitionism gte 95>>
			<<set $transformationParts.traits.flaunting to "default">>
		<<else>>
			<<set $transformationParts.traits.flaunting to "disabled">>
		<</if>>
		<<run delete $uncomfortable.flaunting>>
	<</if>>

	<!-- V0.4 egg -->
	<<if $plants.egg>>
		<<set $plants.chicken_egg to $plants.egg>>
		<<run delete $plants.egg>>
		<<set $plants.chicken_egg.name to "chicken_egg">>
		<<set $plants.chicken_egg.plural to "chicken eggs">>
	<</if>>
	<<if $farmersProduce !== undefined and $farmersProduce.selling !== undefined && $farmersProduce.selling.egg>>
		<<set $farmersProduce.selling.chicken_egg to $farmersProduce.selling.egg>>
		<<run delete $farmersProduce.selling.egg>>
	<</if>>

	<!-- V0.4 tower guard state saved -->
	<<if $per_npc.farm_tower_guard and $per_npc.farm_tower_guard.active isnot undefined>>
		<<run delete $per_npc.farm_tower_guard.active>>
		<<set $per_npc.farm_tower_guard.bold to 0>>
		<<set $per_npc.farm_tower_guard.lefthand to 0>>
		<<set $per_npc.farm_tower_guard.righthand to 0>>
		<<set $per_npc.farm_tower_guard.mouth to 0>>
		<<set $per_npc.farm_tower_guard.chest to "clothed">>
		<<set $per_npc.farm_tower_guard.health to $per_npc.farm_tower_guard.healthmax>>
		<<set $per_npc.farm_tower_guard.location to {head: 0, genitals: 0}>>
		<<set $per_npc.farm_tower_guard.penis to ($per_npc.farm_tower_guard.penis isnot "none") ? "clothed" : "none">>
		<<set $per_npc.farm_tower_guard.vagina to ($per_npc.farm_tower_guard.vagina isnot "none") ? "clothed" : "none">>
	<</if>>

	<!-- V0.4.0.2 SNEAKY posture undefined -->
	<<if $player.gender_posture is undefined>>
		<<if $background is "crossdresser">>
			<<if $player.gender is "f">>
				<<set $player.gender_posture to "m">>
			<<elseif $player.gender is "m">>
				<<set $player.gender_posture to "f">>
			<</if>>
		<<else>>
			<<set $player.gender_posture to "n">>
		<</if>>
	<</if>>

	<!-- V0.4.0.3 SNEAKY - V0.4.0.6 empty NPC name arrays -->
	<<if !$NPC_names_m or $NPC_names_m.length is 0 or !$NPC_names_f or $NPC_names_f.length is 0>>
		<<init_names>>
		<<set $_per_k to Object.keys($per_npc)>>
		<<for $_per_c range $_per_k>>
			<<set $NPC_names_m.delete($per_npc[$_per_c].name)>>
			<<set $NPC_names_f.delete($per_npc[$_per_c].name)>>
		<</for>>
	<</if>>

	<<if $combat is 1>>
		<!-- Update the index attached to NPC properties if they exist. -->
		<<script>>
			V.NPCList.forEach((e, i) => {
				if (e.type && !Number.isFinite(e.index))
					e.index = i;
			});
		<</script>>
	<</if>>

	<!-- Fixing broken transformation stuff -->
	<<if $tfFIX is undefined or $tfFIX lte 1>>
		<<if $tfFIX is undefined>>
			<!-- V0.4.0.5 repair transformationParts object after damage from mid-prayer room or nightmare saves -->
			<<if $transformationParts.fox is undefined>>
				<<set $transformationParts.fox to {ears:"disabled", tail:"disabled", cheeks:"disabled"}>>
				<<if $transformationParts.traits.mateForLife is undefined or $transformationParts.traits.flaunting is undefined>>
					<<set $transformationParts.traits to {fangs:"disabled", sharpEyes:"disabled", mateForLife:"disabled", flaunting:"disabled"}>>
					<<if $wolfgirl gte 2 or $cat gte 2 or $fox gte 2>>
						<<set $transformationParts.traits.fangs to "default">>
					<</if>>
					<<if $cat gte 2 or $harpy gte 2 or $fox gte 2>>
						<<set $transformationParts.traits.sharpEyes to "default">>
					<</if>>
					<<if $fox gte 3 or $harpy gte 3>>
						<<set $transformationParts.traits.mateForLife to "default">>
					<<else>>
						<<set $transformationParts.traits.mateForLife to "disabled">>
					<</if>>
					<<set $transformationParts.traits.flaunting to "disabled">>
				<</if>>
				<<if $fox gte 4>>
					<<set $transformationParts.fox.ears to "default">>
				<</if>>
				<<if $fox gte 5>>
					<<set $transformationParts.fox.cheeks to "default">>
				<</if>>
				<<if $fox gte 6>>
					<<set $transformationParts.fox.tail to "default">>
				<</if>>
			<</if>>

			<!-- V0.4.0.5 Stop any saves in the above situation from being broken upon leaving -->
			<<if $real_transformationParts and !$real_transformationParts.fox>>
				<<set $real_transformationParts.fox to {ears:"disabled", tail:"disabled", cheeks:"disabled"}>>
				<<if $real_transformationParts.traits.mateForLife is undefined or $real_transformationParts.traits.flaunting is undefined>>
					<<if $fox gte 3 or $harpy gte 3>>
						<<set $real_transformationParts.traits.mateForLife to "default">>
					<<else>>
						<<set $real_transformationParts.traits.mateForLife to "disabled">>
					<</if>>
					<<set $real_transformationParts.traits.flaunting to "disabled">>
				<</if>>
			<</if>>
		<</if>>

		<<if $tfFIX is undefined or $tfFIX is 1>>
			<!-- v0.3.13.5 - v0.4.0.8 Fix for virgin fallen angels, moved and fixed from earlier part of versionupdate -->
			<<if $fallenangel is 2>>
				<<set $_isHerm to $player.gender is "h">>
				<<set $_hasVaginalVirginity to $player.vaginaExist and $player.virginity.vaginal is true>>
				<<set $_hasPenileVirginity to $player.penisExist and $player.virginity.penile is true>>
				<<if !$_isHerm and ($_hasVaginalVirginity or $_hasPenileVirginity)
				or $_isHerm and $_hasVaginalVirginity and $_hasPenileVirginity>>
					<<set $fallenangel to 0>>
					<<angelTransform>>
					<<set $transformationParts.fallenAngel.halo to "disabled">>
					<<set $transformationParts.fallenAngel.wings to "disabled">>
				<</if>>
			<</if>>

			<!-- V0.4.0.8 Fix for non-virgin herm angels from bad fix earlier that didn't take herms into account -->
			<<if $angel gte 6 and $player.gender is "h" and !$virginityProtected and ($player.virginity.vaginal isnot true or $player.virginity.penile isnot true)>>
				<<fallenTransform>>
			<</if>>
		<</if>>

		<<set $tfFIX to 2>>
	<</if>>

	<!-- V0.4.0.5 Old saves with untyped named NPCs -->
	<<if $NPCName[0].type is undefined>>
		<<set $_WHY to ["human", "human", "human", "human", "human", "human", "human", "human", "human", "human", "human", "human", "human", "human", "human", "human", "human", "human", "human", "human", "human", "wolf", "human", "human", "human", "human", "hawk", "human", "human", "human"]>>
		<<for $_killMe to 0; $_killMe lte $NPCName.length -1; $_killMe++>>
			<<set $NPCName[$_killMe].type to $_WHY[$_killMe]>>
		<</for>>
	<</if>>

	<!-- To fix issues from when the strap ons overwrote $player.penissize -->
	<<if $player.penisExist and $playerPenisSizeBackup>>
		<<set $player.penissize to $playerPenisSizeBackup>>
	<<elseif $player.penissize is undefined>>
		<<set $player.penissize to 1>>
	<</if>>
	<<unset $playerPenisSizeBackup>>

	<!-- V0.4.0.6 Separating tentacle forest lurker from daily object to prevent midnight errors in tentacle forest -->
	<<if $daily and $daily.tentacle_forest_lurker>>
		<<set $tentacle_forest_lurker to $daily.tentacle_forest_lurker>>
	<</if>>

	<!-- To fix issue where Dr Harper failed to remove both hermaphrodite parasites -->
	<<if $sexStats.vagina.pregnancy.type is "parasite" and $sexStats.vagina.pregnancy.fetus.find(parasite => parasite.stats.gender === "Hermaphrodite")>>
		<<set $sexStats.vagina.pregnancy.motherStatus to 2>>
	<</if>>

	<<if !$objectVersion.wardForceUnlock>>
		<<if !$objectVersion.wardForceUnlock and !$ward_unlocked and Object.values($children).find(child => child.location is "home" and child.birthLocation isnot "hospital")>>
			<<set $_childrenToIntro to Object.values($children).filter(child => child.location is "home" and child.birthLocation isnot "hospital")>>
			<<run console.log($_childrenToIntro)>>
			<<run $_childrenToIntro.forEach(child => wikifier("setBabyIntro", child.mother, "Bailey", child.birthId))>>
		<</if>>
		<<set $objectVersion.wardForceUnlock to 1>>
	<</if>>

	<<if $maleChanceMale is undefined>>
		<<set $maleChanceMale to $malechance>>
		<<set $maleChanceFemale to $malechance>>
		<<set $maleChanceSplit to "f">>
		<<set $beastMaleChanceMale to $beastmalechance>>
		<<set $beastMaleChanceFemale to $beastmalechance>>
		<<set $beastMaleChanceSplit to "f">>
	<</if>>

	<<if $forcedcrossdressingdisable is undefined>>
		<<set $forcedcrossdressingdisable to "f">>
	<</if>>

	<!-- V0.4.0.9 $currentFurnishing should not be a story variable, and no story variables should be (or include) functions -->
	<<if $currentFurnishing>>
		<<unset $currentFurnishing>>
		<<run State.history.forEach(s => delete s.variables.currentFurnishing)>>
	<</if>>

	<!-- V0.4.1.1 Fixed for some wolves having "human" sperm -->
	<<if !$objectVersion.pregnancyFix>>
		<<physicalAdjustmentsInit>>
	<</if>>

	<<if $speech_attitude is undefined>>
		<<set $speech_attitude to "neutral">>
	<</if>>

	<!-- V0.4.1.7 Set V.options.confirmDialogUponTabClose for the new confirm dialog box prompting when user closes/refresh tab -->
	<<if $options.confirmDialogUponTabClose is undefined>>
		<<if $ironmanmode is true>>
			<<set $options.confirmDialogUponTabClose to true>>
		<<else>>
			<<set $options.confirmDialogUponTabClose to false>>
		<</if>>
	<</if>>

	<!-- V0.4.x.x Ear Slime Extension -->
	<<if $earSlime is undefined>>
		<<resetEarSlime>>
		<<set $earSlime.corruption to $corruption_slime or 0>>
		<<set $earSlime.event to $slimeEvent or "">>
		<<set $earSlime.eventTimer to $slimeSleepEvent or 0>>
		<<set $earSlime.eventLength to $slimeEventLength or 0>>
		<<set $earSlime.defyCooldown to  $slimeDefyCooldown or 0>>
		<<set $masturbationRuinedOrgasm to 0>>
		<<set $ruinedOrgasmStat to 0>>

		<<if ["go running or swimming for an hour", "steal something", "go running or swimming naked for an hour"].includes($earSlime.event)>>
			<<set $earSlime.noSleep to true>>
		<</if>>

		<<unset $corruption_slime>>
		<<unset $slimeEvent>>
		<<unset $slimeSleepEvent>>
		<<unset $slimeDefyCooldown>>
		<<set $ruinedorgasmdisable to "f">>
	<</if>>
	<<if !$parasite.types.includes("parasite")>>
		<<run $parasite.types.push("parasite")>>
		<<run $parasite.parasite to []>>
		<<run $parasite.breasts to {}>>
	<</if>>

	<!-- V0.4.2.0 Give leotards a default colour of black after making them recolourable-->
	<<script>>
		let underUpperChanger = item => {
			if (item.index === 3 || item.index === 4 || item.index === 5 || item.index === 8) {
				if (item.colour === 0) {
					item.colour = "black";
					item.colour_combat = "black";
				}
			}
		};
		V.wardrobe.under_upper.forEach(underUpperChanger);
		underUpperChanger(V.worn.under_upper);

		const underLowerChanger = item => {
			if (item.index === 8 || item.index === 9 || item.index === 10 || item.index === 13) {
				if (item.colour === 0) {
					item.colour = "black";
					item.colour_combat = "black";
				}
			}
		};
		V.wardrobe.under_lower.forEach(underLowerChanger);
		underLowerChanger(V.worn.under_lower);
	<</script>>

	<!-- V0.4.2.0 Crime Overhaul -->
	<<if !$objectVersion.crime>>
		<<set _oldCrime to parseInt($crime) || 0>>
		<<set _oldCrimeHistory to parseInt($crimehistory) || 0>>
		<<unset $crime>><<unset $crimehistory>>
		<<set $crime to {
			assault: {current: 0, history: 0, daily: 0, count: 0, countHistory: 0},
			coercion: {current: 0, history: 0, daily: 0, count: 0, countHistory: 0},
			destruction: {current: 0, history: 0, daily: 0, count: 0, countHistory: 0},
			exposure: {current: 0, history: 0, daily: 0, count: 0, countHistory: 0},
			obstruction: {current: 0, history: 0, daily: 0, count: 0, countHistory: 0},
			prostitution: {current: 0, history: 0, daily: 0, count: 0, countHistory: 0},
			resisting: {current: 0, history: 0, daily: 0, count: 0, countHistory: 0},
			thievery: {current: _oldCrime, history: _oldCrimeHistory, daily: 0, count: 0, countHistory: 0},
			petty: {current: 0, history: 0, daily: 0, count: 0, countHistory: 0},
			trespassing: {current: 0, history: 0, daily: 0, count: 0, countHistory: 0},
			events: {},
		}>>
		<<if $crime.thievery.current gte 1>>
			<<set $crime.thievery.count to 1>><<set $crime.thievery.countHistory to 1>>
			<<set C.crime.logEvent(_oldCrime, "thievery", "legacy", 0)>>
		<</if>>
		<<set $objectVersion.crime to 1>>
	<</if>>

	<!-- V0.4.2.0 Temple rank prep -->
	<<if $world_corruption_soft is undefined>>
		<<set $world_corruption_soft to 0>>
		<<set $world_corruption_hard to 2>>
		<<set $world_corruption_reduced to 0>>
		<<if $stat_aphrodisiacs_sold gte 1>>
			<<world_corruption "soft" $stat_aphrodisiacs_sold>>
		<</if>>
		<<if $sydneySeen>>
			<<if $sydneySeen.includes("corruptroom")>>
				<<world_corruption "hard" 1>>
			<</if>>
		<</if>>
		<<if $museumAntiques.antiques.antiquebell is "stolen">>
			<<world_corruption "hard" 2>>
		<</if>>
		<<if $museumAntiques.antiques.antiqueivorynecklace is "talk" or $museumAntiques.antiques.antiqueivorynecklace is "museum">>
			<<world_corruption "hard" 2>>
		<</if>>
		<<if $templePromised is "Sydney">>
			<<world_corruption "hard" -1>>
		<</if>>
	<</if>>

	<!-- V0.4.2.3 Fixes existing saves affected by Moderate Start "f" bug -->
	<<if $malechance is "f">>
		<<set $malechance to 0>>
	<</if>>
	<<if $beastmalechance is "f">>
		<<set $beastmalechance to 0>>
	<</if>>

	/* ChocoFacMod-BEGIN */
	<<if $chocolateCounts is undefined>>
		<<run initChocolateVariables()>>
	<</if>>
	/* ChocoFacMod-END */
<</widget>>
